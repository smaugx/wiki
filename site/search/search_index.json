{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"cmake/","text":"title: cmake\u6559\u7a0b|cmake\u5165\u95e8\u5b9e\u6218 date: 2020/04/11 11:23:58 tags: - cmake - CMakeLists.txt - scons - c++ - c - linux - compile - build categories: - c++ comments: \u524d\u8a00 \u6211\u662f\u4e00\u4e2a linux c++ \u5f00\u53d1\u8005\uff0c\u4f46\u662f\u4e00\u76f4\u5bf9 Makefile \u7684\u8bed\u6cd5\u5f88\u662f\u5934\u75db\uff0c\u6bcf\u6b21\u90fd\u8bb0\u4e0d\u4f4f\uff0c\u6240\u4ee5\u6bcf\u6b21\u5199 Makefile \u90fd\u5f88\u75db\u82e6\uff0cMakefile \u91cc\u9700\u8981\u4f60\u81ea\u5df1\u7f16\u5199\u4f9d\u8d56\u548c\u63a8\u5bfc\u89c4\u5219\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u80fd\u4e0d\u80fd\u7b80\u5355\u70b9\u5462\uff1f \u5bf9\u4e8e\u7f16\u8bd1\u4e00\u4e2a C++ \u5de5\u7a0b\u6765\u8bf4\uff0c\u4e5f\u8bb8\u9700\u8981\u7684\u5c31\u662f\u5934\u6587\u4ef6\u8def\u5f84\u3001\u5e93\u8def\u5f84\u3001\u7f16\u8bd1\u53c2\u6570\uff0c\u5269\u4e0b\u7684\u4e1c\u897f\u57fa\u672c\u4e5f\u4e0d\u91cd\u8981\uff0c\u8fd9\u4e09\u6837\u8db3\u591f\u53bb\u7f16\u8bd1\u4e00\u4e2a\u5de5\u7a0b\u4e86\u3002\u6240\u4ee5\u6709\u6ca1\u6709\u4e00\u4e2a\u5de5\u5177\u80fd\u7b80\u5355\u70b9\u7684\u53bb\u5b9e\u73b0 C++ \u9879\u76ee\u7684\u6784\u5efa\u5462\uff1f \u7b54\u6848\u662f\u6709\u7684\uff0c\u4e0a\u4e00\u7bc7\u535a\u6587 scons\u6784\u5efaC++\u9879\u76ee \u4ecb\u7ecd\u4e86 \u4f7f\u7528 scons \u6765\u6784\u5efa C++ \u9879\u76ee\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u7f16\u5199\u6784\u5efa\u811a\u672c\u7684\u6548\u7387\uff0c\u4f7f\u7528\u8d77\u6765\u4e5f\u6781\u4e3a\u65b9\u4fbf\uff0c\u5bf9\u4e8e\u719f\u6089 python \u7684\u7ae5\u978b\u6765\u8bf4\u771f\u7684\u662f\u5927\u5927\u7684\u798f\u97f3\uff1b\u4f46 scons \u7684\u95ee\u9898\u5c31\u662f\u5728\u5927\u578b\u9879\u76ee\u7684\u65f6\u5019\u6784\u5efa\u8d77\u6765\u53ef\u80fd\u4f1a\u5f88\u6162\uff08\u542c\u8bf4\u7684\uff09\u3002\u90a3\u4e48\u6709\u6ca1\u6709\u5176\u4ed6\u7684\u5de5\u5177\u5462\uff1f \u5f53\u7136\u6709\uff0ccmake \u5c31\u662f\u8fd9\u6837\u7684\u4e00\u4e2a\u5de5\u5177\uff0c\u65e2\u80fd\u6ee1\u8db3\u8de8\u5e73\u53f0\u7684\u7f16\u8bd1\uff0c\u5e76\u4e14\u5c4f\u853d\u4e86 Makefile \u86cb\u75bc\u7684\u8bed\u6cd5\uff0c\u4f7f\u7528\u4e00\u79cd\u66f4\u52a0\u7b80\u5355\u7684\u8bed\u6cd5\u7f16\u5199\u6784\u5efa\u811a\u672c\uff0c\u7528\u5728\u5927\u578b\u9879\u76ee\u4e5f\u6beb\u65e0\u538b\u529b\u3002 \u5f53\u7136\uff0c\u5bf9\u4e8e\u6211\u4e2a\u4eba\u6765\u8bf4\uff0ccmake \u7684\u4f7f\u7528\u8fd8\u662f\u6709\u95e8\u69db\u7684\uff0c\u521a\u63a5\u89e6 cmake \u53ef\u80fd\u8fd8\u662f\u4f1a\u88ab\u5b83\u7684\u8bed\u6cd5\u641e\u7684\u5934\u75bc\uff08cmake \u7684\u8bed\u6cd5\u4e5f\u8fd8\u662f\u633a\u6298\u817e\u7684\uff09\u3002\u4f46\u662f\u522b\u6025\uff0c\u6c89\u4e0b\u5fc3\u6765\uff0c\u672c\u7bc7\u535a\u6587\u5c31\u5e26\u4f60\u4ece cmake \u5165\u95e8\u5230\u7f16\u5199\u4e00\u4e2a\u590d\u6742\u5de5\u7a0b\u7684\u5b9e\u6218\u3002 CMake \u4ec0\u4e48\u662f cmake \u8fd9\u91cc\u76f4\u63a5\u5f15\u7528\u5b98\u7f51\u7684\u89e3\u91ca\uff1a CMake is an open-source, cross-platform family of tools designed to build, test and package software. CMake is used to control the software compilation process using simple platform and compiler independent configuration files, and generate native makefiles and workspaces that can be used in the compiler environment of your choice. The suite of CMake tools were created by Kitware in response to the need for a powerful, cross-platform build environment for open-source projects such as ITK and VTK. CMake \u662f\u4e00\u4e2a\u5f00\u6e90\u4f60\u8de8\u5e73\u53f0\u7684\u6784\u5efa\u5de5\u5177\uff0c\u8bed\u6cd5\u7b80\u5355\uff0c\u7f16\u8bd1\u72ec\u7acb\uff0c\u5e76\u4e14\u5f88\u591a\u77e5\u540d\u5927\u578b\u9879\u76ee\u4e5f\u5728\u7528 CMake,\u6bd4\u5982 KDE\u3001Netflix \u3001ReactOS\u7b49\u3002 OK\uff0c\u8bdd\u4e0d\u591a\u8bf4\uff0c\u5982\u4f55\u4f7f\u7528\u5462\uff1f \u5b89\u88c5 cmake sudo yum install cmake3.x86_64 \u73b0\u5728\u6700\u65b0\u7248\u7684 cmake \u5df2\u7ecf\u5230 3.18.2 \u4e86\u3002\u6211\u4f7f\u7528\u7684\u662f 3.17.2 \u7248\u672c\u3002 $ cmake --version cmake version 3.17.2 CMake suite maintained and supported by Kitware (kitware.com/cmake). \u521d\u8bc6 cmake \u4f7f\u7528 cmake \u6765\u6784\u5efa C++ \u9879\u76ee\uff0c\u9700\u8981\u5148\u7f16\u5199 cmake \u6784\u5efa\u811a\u672c\uff0c\u6587\u4ef6\u540d\u4e3a CMakeLists.txt\uff0c\u9879\u76ee\u9876\u5c42\u76ee\u5f55\u9700\u8981\u653e\u4e00\u4e2a CMakeLists.txt\uff0c\u540c\u65f6\u5b50\u76ee\u5f55\u53ef\u4ee5\u6839\u636e\u9700\u8981\u653e\u7f6e CMakeLists.txt\u3002 \u90a3\u4e48\u5148\u6765\u770b\u770b CMakeLists.txt \u957f\u5565\u6837? cmake_minimum_required(VERSION 3.8.0) set(CMAKE_CXX_STANDARD 11) set(CMAKE_CXX_STANDARD_REQUIRED ON) set(CMAKE_CXX_EXTENSIONS OFF) set(CMAKE_C_STANDARD 99) set(CMAKE_C_STANDARD_REQUIRED ON) set(CMAKE_C_EXTENSIONS OFF) project(MUX CXX C) add_definitions( -DTEST1 # define marco -DTEST2 # define marco ) # common compiling options add_compile_options( -Wl,--no-as-needed -fno-strict-aliasing -fthreadsafe-statics -pthread #-fstack-protector-strong -fno-short-enums -fPIC ) option(XENABLE_TEST3 enable test3 marco OFF) set(EXECUTABLE_OUTPUT_PATH ${MUX_BINARY_DIR}/bin) set(LIBRARY_OUTPUT_PATH ${MUX_BINARY_DIR}/lib) if (XENABLE_TEST3) add_definitions(-DTEST3) endif() if (NOT CMAKE_BUILD_TYPE) set(CMAKE_BUILD_TYPE Debug) endif() message(STATUS CMAKE_BUILD_TYPE: ${CMAKE_BUILD_TYPE}) message(STATUS CMAKE_SYSTEM_NAME: ${CMAKE_SYSTEM_NAME}) message(STATUS XENABLE_TEST3: ${XENABLE_TEST3}) find_package(Threads REQUIRED) # include header dirs include_directories(${CMAKE_SOURCE_DIR}) # project dir include_directories(${CMAKE_SOURCE_DIR}/third-party/include) # project dir include_directories(${CMAKE_CURRENT_BINARY_DIR}) # current CMakeLists.txt dir (including sub dir) # link lib dirs link_directories(${CMAKE_SOURCE_DIR}/third-party/lib) link_directories(${LIBRARY_OUTPUT_PATH}) # generate in building add_subdirectory(demo/bench) add_subdirectory(demo/echo) add_subdirectory(epoll) add_subdirectory(mbase) add_subdirectory(message_handle) add_subdirectory(transport) \u5b8c\u6574\u7684 CMakeLists.txt \u89c1 \u6211\u7684github \uff0c\u540c\u65f6\u6211\u4e5f\u4f1a\u4ee5\u6211\u7684github\u9879\u76ee mux \u4e3a\u4f8b\uff0c\u4ecb\u7ecd cmake \u7684\u4f7f\u7528\u3002 \u4e0a\u9762\u7684 CMakeLists.txt \u4e4d\u4e00\u770b\uff0c\u597d\u591a\u5185\u5bb9\uff0c\u4f46\u662f\u522b\u614c\uff0c\u6211\u4eec\u6765\u4e00\u4e2a\u4e2a\u8bf4\u3002 \u8be6\u89e3 cmake \u6ce8\u610f\uff1a cmake \u7684\u8bed\u6cd5\u53ef\u4ee5\u5206\u4e3a\u547d\u4ee4(\u51fd\u6570\uff09\u548c\u53c2\u6570\u3002 \u547d\u4ee4\u4e0d\u7f3a\u5206\u5927\u5c0f\u5199\uff0c\u53c2\u6570\u533a\u5206\u5927\u5c0f\u5199 \u3002 \u6ce8\u610f\uff1a cmake \u7684\u8bed\u6cd5\u53ef\u4ee5\u5206\u4e3a\u547d\u4ee4(\u51fd\u6570\uff09\u548c\u53c2\u6570\u3002 \u547d\u4ee4\u4e0d\u7f3a\u5206\u5927\u5c0f\u5199\uff0c\u53c2\u6570\u533a\u5206\u5927\u5c0f\u5199 \u3002 \u8bbe\u7f6e cmake \u7248\u672c\u7684\u8981\u6c42 cmake_minimum_required(VERSION 3.8.0) \u5728 cmake \u4e2d\u8bbe\u7f6e c++ \u6807\u51c6\uff0c\u542f\u7528 c++11 \u6216\u4ee5\u4e0a(\u6839\u636e\u9879\u76ee\u7684\u9700\u6c42\u6765\uff09 set(CMAKE_CXX_STANDARD 11) set(CMAKE_CXX_STANDARD_REQUIRED ON) set(CMAKE_CXX_EXTENSIONS OFF) set(CMAKE_C_STANDARD 99) set(CMAKE_C_STANDARD_REQUIRED ON) set(CMAKE_C_EXTENSIONS OFF) \u8bbe\u7f6e\u9879\u76ee\u540d\u4ee5\u53ca\u9879\u76ee\u8bed\u8a00 project(MUX CXX C) \u8bbe\u7f6e\u5b8c\u9879\u76ee\u540d\u79f0\u4e4b\u540e\uff0c\u4f1a\u81ea\u52a8\u521b\u5efa\u4e24\u4e2a\u53d8\u91cf PROJECT-NAME _SOURCE_DIR \u548c PROJECT-NAME _BINARY_DIR \uff0c\u5bf9\u4e8e mux \u8fd9\u4e2a\u9879\u76ee\u6765\u8bf4\uff0c\u4e5f\u5c31\u662f MUX_SOURCE_DIR \u548c MUX_BINARY_DIR \u3002 MUX_SOURCE_DIR \u8868\u793a\u5de5\u7a0b\u9876\u5c42\u76ee\u5f55\uff1b MUX_BINARY_DIR \u8868\u793a cmake \u6784\u5efa\u53d1\u751f\u7684\u76ee\u5f55\u3002 \u56e0\u4e3a\u4f60\u4e00\u5b9a\u719f\u6089\u6216\u8005\u7528\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u6216\u6b65\u9aa4\uff1a mkdir cbuild cd cbuild cmake .. make make test make install \u901a\u5e38\u6211\u4eec\u4f1a\u5355\u72ec\u65b0\u5efa\u4e00\u4e2a cbuild \u76ee\u5f55\uff0c\u7528\u6765\u6784\u5efa\u9879\u76ee\uff0c\u5e76\u4e14\u5b58\u653e\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684\u6587\u4ef6\u3002\u90a3\u4e48 cbuild \u76ee\u5f55\u5c31\u662f MUX_BINARY_DIR \u8868\u793a\u7684\u76ee\u5f55\uff0ccbuild \u7684\u4e0a\u4e00\u7ea7\u76ee\u5f55\u4e5f\u5c31\u662f\u9879\u76ee\u9876\u5c42\u76ee\u5f55\u5c31\u662f MUX_SOURCE_DIR \u8868\u793a\u7684\u76ee\u5f55\u3002 \u5982\u679c\u4f60\u6ca1\u6709\u5355\u72ec\u65b0\u5efa cbuild \u76ee\u5f55\uff0c\u800c\u662f\u76f4\u63a5\u5728\u9879\u76ee\u9876\u5c42\u76ee\u5f55\u4f7f\u7528 cmake .. \uff0c\u90a3\u4e48\u4e0a\u9762\u4e24\u4e2a\u53d8\u91cf\u5747\u6307\u9879\u76ee\u9876\u5c42\u76ee\u5f55\u3002 \u8be6\u89c1 https://cmake.org/cmake/help/latest/command/project.html \u6dfb\u52a0\u7f16\u8bd1\u5b8f add_definitions( -DTEST1 # define marco -DTEST2 # define marco ) \u4e0a\u9762\u662f\u6211\u968f\u4fbf\u5199\u7684\u4e24\u4e2a\u5b8f TEST1 \u548c TEST2 \uff0c\u90a3\u4e48\u5728c++\u4ee3\u7801\u4e2d\u901a\u5e38\u662f\u8fd9\u6837\u7684\uff1a #ifdef TEST1 // do something about test1 #endif #ifdef TEST2 // do something about test2 #endif \u5f53\u7136\u8981\u5f00\u542f\u8fd9\u4e2a\u5b8f\u4e5f\u53ef\u4ee5\u4e0d\u7528\u5199\u5728 CMakeLists.txt \u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd9\u6837\u4f7f\u7528\uff1a mkdir cbuild cd cbuild cmake .. -DTEST1 \u8fd9\u4e2a\u6839\u636e\u4f60\u7684\u9879\u76ee\u9700\u6c42\u6765\u64cd\u4f5c\u3002 \u5b9a\u4e49\u4e00\u4e9b\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u53ef\u9009\u9879 option(XENABLE_TEST3 enable test3 marco OFF) if (XENABLE_TEST3) add_definitions(-DTEST3) endif() if (NOT CMAKE_BUILD_TYPE) set(CMAKE_BUILD_TYPE Debug) endif() \u4f7f\u7528 option \u547d\u4ee4\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e00\u4e9b\u53d8\u91cf\u7684\u503c\uff0c\u4f5c\u4e3a\u4e00\u4e9b\u6761\u4ef6\u5224\u65ad\u7684\u5f00\u5173\u5f88\u65b9\u4fbf\u3002 \u8be6\u89c1 https://cmake.org/cmake/help/latest/command/option.html \u6dfb\u52a0\u7f16\u8bd1\u9009\u9879 # common compiling options add_compile_options( -Wl,--no-as-needed -fno-strict-aliasing -fthreadsafe-statics -pthread #-fstack-protector-strong -fno-short-enums -fPIC ) \u8fd9\u91cc\u5c31\u662f\u4e00\u4e9b\u7f16\u8bd1\u9009\u9879\uff0c\u6839\u636e\u81ea\u5df1\u7684\u9879\u76ee\u9700\u6c42\u4fee\u6539\u3002 \u8bbe\u7f6e\u7f16\u8bd1\u4e8c\u8fdb\u5236(binary-executable \u548c binary-lib\uff09\u5b58\u653e\u8def\u5f84 set(EXECUTABLE_OUTPUT_PATH ${MUX_BINARY_DIR}/bin) set(LIBRARY_OUTPUT_PATH ${MUX_BINARY_DIR}/lib) \u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7528\u5230\u4e86 MUX_BINARY_DIR \u8fd9\u4e2a\u53d8\u91cf\uff0c\u4e5f\u5c31\u662f\u8bf4\u6700\u7ec8\u7f16\u8bd1\u51fa\u6765\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u548clib \u5e93\u4f1a\u5b58\u653e\u5728 cbuild/bin \u548c cbuild/lib \u4e2d\u3002 \u6253\u5370\u4e00\u4e9b\u4fe1\u606f\u5230\u7ec8\u7aef message(STATUS CMAKE_BUILD_TYPE: ${CMAKE_BUILD_TYPE}) message(STATUS CMAKE_SYSTEM_NAME: ${CMAKE_SYSTEM_NAME}) message(STATUS XENABLE_TEST3: ${XENABLE_TEST3}) \u6253\u5370\u4e00\u4e9b\u8c03\u8bd5\u4fe1\u606f\uff0c\u6216\u8005\u7f16\u8bd1\u4fe1\u606f\u5230\u7ec8\u7aef\uff0c\u4f7f\u7528\u7684\u662f message \u547d\u4ee4\u3002 \u8be6\u89c1 https://cmake.org/cmake/help/latest/command/message.html \u3002 \u8bbe\u7f6e\u5934\u6587\u4ef6\u8def\u5f84 # include header dirs include_directories(${CMAKE_SOURCE_DIR}) # project dir include_directories(${CMAKE_SOURCE_DIR}/third-party/include) # project dir include_directories(${CMAKE_CURRENT_BINARY_DIR}) # current CMakeLists.txt dir (including sub dir) \u5206\u522b\u89e3\u91ca\u4e00\u4e0b\uff1a CMAKE_SOURCE_DIR \u8868\u793a\u5de5\u7a0b\u9876\u5c42\u76ee\u5f55\uff0c\u4e5f\u5c31\u662f MUX_SOURCE_DIR \uff1b CMAKE_CURRENT_BINARY_DIR \u8868\u793a\u5f53\u524d\u5904\u7406\u7684 CMakeLists.txt \u6240\u5728\u7684\u76ee\u5f55\uff0c\u5bf9\u4e8e\u5b50\u76ee\u5f55\u4e2d\u7684 CMakeLists.txt \u6765\u8bf4\uff0c\u5373\u8868\u793a\u8fd9\u4e2a\u5b50\u76ee\u5f55\u3002 \u901a\u5e38\u8fd9\u4e24\u4e2a\u662f\u5e38\u7528\u7684\uff0c\u5fc5\u987b\u7684\u3002\u7136\u540e\u4f7f\u7528 include_directories \u547d\u4ee4\u5305\u542b\u5176\u4ed6\u7684\u4e00\u4e9b\u5934\u6587\u4ef6\u8def\u5f84\u3002 \u8bbe\u7f6e\u4f9d\u8d56\u5e93\u7684\u8def\u5f84 # link lib dirs link_directories(${CMAKE_SOURCE_DIR}/third-party/lib) link_directories(${LIBRARY_OUTPUT_PATH}) # generate in building LIBRARY_OUTPUT_PATH \u5c31\u662f\u4e0a\u9762\u8bbe\u7f6e\u7684\u7f16\u8bd1\u76ee\u6807\u4e8c\u8fdb\u5236\u5e93\u7684\u5b58\u653e\u8def\u5f84\uff0c\u56e0\u4e3a\u5b9e\u9645\u9879\u76ee\u4e2d\uff0c\u5b50\u6a21\u5757\u4e4b\u95f4\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u4f9d\u8d56\uff0c\u5b50\u6a21\u5757\u5355\u72ec\u7f16\u8bd1\u6210\u4e00\u4e2a\u5e93\uff0c\u7136\u540e\u8ba9\u5176\u4ed6\u6a21\u5757\u94fe\u63a5\u3002\u8fd9\u4e2a\u76ee\u5f55\u4e5f\u5c31\u662f cbuild/lib \u76ee\u5f55\u3002 \u5f15\u5165\u5b50\u6a21\u5757(\u5b50\u76ee\u5f55\uff09 add_subdirectory(demo/bench) add_subdirectory(demo/echo) add_subdirectory(epoll) add_subdirectory(mbase) add_subdirectory(message_handle) add_subdirectory(transport) \u4f7f\u7528 add_subdirectory \u547d\u4ee4\u628a\u5b50\u6a21\u5757\u5305\u542b\u8fdb\u6765\uff0c\u5fc5\u987b\u786e\u4fdd\u6bcf\u4e2a\u5b50\u76ee\u5f55\u4e0b\u9762\u6709\u4e00\u4e2a CMakeLists.txt \u6587\u4ef6\uff0c\u4e0d\u7136\u4f1a\u62a5\u9519\u3002 \u4ee5\u4e0a\u5c31\u662f\u5de5\u7a0b\u9876\u5c42\u76ee\u5f55\u7684 CMakeLists.txt \u7684\u5185\u5bb9\uff0c\u5206\u6790\u4e0b\u6765\u662f\u4e0d\u662f\u5f88\u6e05\u695a\u5462 \uff1f \u90a3\u4e48\u5de5\u7a0b\u9876\u5c42\u76ee\u5f55\u7684 CMakeLists.txt \u5176\u5b9e\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u8bbe\u7f6e\u4e00\u4e9b\u57fa\u672c\u7684\u53d8\u91cf\uff0c\u5b8f\u5f00\u5173\uff0c\u7f16\u8bd1\u53c2\u6570\uff0c\u5934\u6587\u4ef6\u8def\u5f84\uff0c\u4f9d\u8d56\u5e93\u8def\u5f84\uff0c\u7f16\u8bd1\u76ee\u6807\u4fdd\u5b58\u8def\u5f84\u7b49\u7b49\uff0c\u5b50\u76ee\u5f55\u4e2d\u7684 CMakeLists.txt \u624d\u662f\u771f\u6b63\u4ea7\u751f\u7f16\u8bd1\u76ee\u6807\u7684\uff08exe\u548clib)\u3002 \u751f\u6210\u9759\u6001\u5e93/\u52a8\u6001\u5e93 # keep all cpp files in varibale ${epoll_src} aux_source_directory(./src epoll_src) add_library(epoll STATIC ${epoll_src}) add_dependencies(epoll mbase ) target_link_libraries(epoll mbase pthread) \u6e90\u6587\u4ef6\u5728\u8fd9\uff1a \u6233\u6211 \u4f7f\u7528 aux_source_directory \u6dfb\u52a0\u6e90\u6587\u4ef6\uff0c\u76f8\u5f53\u4e8e\u628a src \u76ee\u5f55\u4e0b\u7684\u6240\u6709 c++ \u6587\u4ef6\u4fdd\u5b58\u5230 epoll_src \u8fd9\u4e2a\u53d8\u91cf\u4e2d\uff1b \u4f7f\u7528 add_library \u751f\u6210\u76ee\u6807\u5e93\uff08\u6839\u636e\u9700\u8981\u53ef\u4ee5\u751f\u6210\u9759\u6001\u5e93\u548c\u52a8\u6001\u5e93\uff0c\u5206\u522b\u4f7f\u7528 STATIC \u548c SHARED) \u7136\u540e\u5c31\u662f\u6dfb\u52a0\u8fd9\u4e2a\u6a21\u5757\u9700\u8981\u4f9d\u8d56\u5230\u7684\u5176\u4ed6\u6a21\u5757\uff0c\u4ee5\u53ca\u94fe\u63a5\u53c2\u6570\u3002 \u4e0a\u9762\u7684\u4ee3\u7801\u6700\u7ec8\u5c31\u4f1a\u5728 cbuild/lib \u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u4e2a libepoll.a \u6587\u4ef6\u3002 \u751f\u6210\u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u6587\u4ef6 # build target echo_server add_executable(echo_server echo_server.cc) add_dependencies(echo_server transport msghandler mbase) target_link_libraries(echo_server transport msghandler mbase) # build target echo_client add_executable(echo_client client.cc) add_dependencies(echo_client transport msghandler mbase) target_link_libraries(echo_client transport msghandler mbase) \u6e90\u6587\u4ef6\u5728\u8fd9\uff1a \u6233\u6211 \u548c\u751f\u6210\u5e93\u5927\u4f53\u662f\u7c7b\u4f3c\u7684\uff0c\u533a\u522b\u662f\u4f7f\u7528\u7684\u662f add_executable \u8fd9\u4e2a\u547d\u4ee4\u3002 \u5176\u4ed6\u5b50\u6a21\u5757\u7684 CMakeLists.txt \u89c1 \u6211\u7684github . cmake \u7f16\u8bd1\u6784\u5efa \u4e0a\u9762\u8be6\u7ec6\u7684\u4ecb\u7ecd\u4e86 CMakeLists.txt \u7684\u5199\u6cd5\uff0c\u5982\u679c\u4eff\u7167\u672c\u6587\uff0c\u5e94\u8be5\u4e5f\u80fd\u5199\u51fa\u9002\u5408\u4f60\u9879\u76ee\u7684\u6784\u5efa\u811a\u672c\uff0c\u4f46\u662f\u53ef\u80fd\u8fd8\u4e0d\u591f\uff0c\u5176\u4ed6\u8bed\u6cd5\u81ea\u884c google \u5b66\u4e60\u3002 \u4e0a\u9762\u5176\u5b9e\u662f\u4ee5\u6211\u7684\u9879\u76ee \u8fdb\u884c\u7684\u6f14\u793a\uff0c\u6709\u5fc5\u8981\u89e3\u8bfb\u4e00\u4e0b\u8fd9\u4e2a\u9879\u76ee\u7684\u7ed3\u6784\u5c42\u6b21\uff1a $ tree mux -d mux \u251c\u2500\u2500 demo \u2502 \u251c\u2500\u2500 bench \u2502 \u2514\u2500\u2500 echo \u251c\u2500\u2500 epoll \u2502 \u251c\u2500\u2500 include \u2502 \u2514\u2500\u2500 src \u251c\u2500\u2500 mbase \u2502 \u2514\u2500\u2500 src \u251c\u2500\u2500 message_handle \u2502 \u251c\u2500\u2500 include \u2502 \u2514\u2500\u2500 src \u251c\u2500\u2500 third-party \u2502 \u251c\u2500\u2500 include \u2502 \u2502 \u251c\u2500\u2500 nlohmann \u2502 \u2502 \u2514\u2500\u2500 spdlog \u2502 \u2502 \u251c\u2500\u2500 cfg \u2502 \u2502 \u251c\u2500\u2500 details \u2502 \u2502 \u251c\u2500\u2500 fmt \u2502 \u2502 \u2502 \u2514\u2500\u2500 bundled \u2502 \u2502 \u2514\u2500\u2500 sinks \u2502 \u2514\u2500\u2500 lib \u2514\u2500\u2500 transport \u251c\u2500\u2500 include \u2514\u2500\u2500 src 24 directories mux \u662f\u5de5\u7a0b\u9876\u5c42\u76ee\u5f55\uff0c\u4e0b\u9762\u5305\u542b\u7684 epoll \u3001 mbase \u3001 message_handle \u3001 transport \u8fd9\u51e0\u4e2a\u76ee\u5f55\uff0c\u5747\u6253\u5305\u6210\u4e00\u4e2a\u9759\u6001\u5e93\uff1b demo \u76ee\u5f55\u4e0b\u5206\u522b\u5305\u542b bench \u548c echo \u4e24\u4e2a\u76ee\u5f55\uff0c\u8fd9\u4e24\u4e2a\u76ee\u5f55\u4e0b\u9700\u8981\u6784\u5efa\u53ef\u6267\u884c\u7a0b\u5e8f\u3002 \u6240\u4ee5\u9996\u5148\u662f epoll \u3001 mbase \u3001 message_handle \u3001 transport \u8fd9\u51e0\u4e2a\u76ee\u5f55\u751f\u6210\u9759\u6001\u5e93\uff0c\u7136\u540e bench \u548c echo \u4e0b\u7684\u4ee3\u7801\u4f9d\u8d56\u4e8e\u524d\u9762\u7684\u51e0\u4e2a\u6a21\u5757\uff0c\u751f\u6210\u53ef\u6267\u884c\u7a0b\u5e8f\u3002 \u524d\u9762\u5176\u5b9e\u5df2\u7ecf\u63d0\u5230\u4e86\uff0c\u57fa\u672c\u7684\u6784\u5efa\u547d\u4ee4\u5982\u4e0b\uff1a mkdir cbuild cd cbuild cmake .. make -j4 \u5176\u4e2d\u6ce8\u610f\uff0c\u5982\u679c\u4f60\u6ca1\u6709\u5355\u72ec\u6784\u5efa cbuild \u76ee\u5f55\u7684\u8bdd\uff0c\u53ef\u80fd\u4f1a\u751f\u6210\u4e00\u4e9b\u4e2d\u95f4\u4e34\u65f6\u6587\u4ef6\u6c61\u67d3\u4e86\u76ee\u5f55\u3002\u5e76\u4e14\u6ce8\u610f\uff0ccmake \u540e\u9762\u7684 .. \u8868\u793a\u7684\u662f\u5de5\u7a0b\u9876\u5c42\u7684 CMakeLists.txt \u7684\u76ee\u5f55\u3002\u6240\u4ee5\u5982\u679c\u76f4\u63a5\u4f7f\u7528\u7684\u662f\u5de5\u7a0b\u9876\u5c42\u76ee\u5f55\u6784\u5efa\u7684\u8bdd\uff0c\u5c31\u5e94\u8be5\u662f cmake . $ cmake .. -- The CXX compiler identification is GNU 4.8.5 -- The C compiler identification is GNU 4.8.5 -- Check for working CXX compiler: /usr/local/bin/c++ -- Check for working CXX compiler: /usr/local/bin/c++ - works -- Detecting CXX compiler ABI info -- Detecting CXX compiler ABI info - done -- Detecting CXX compile features -- Detecting CXX compile features - done -- Check for working C compiler: /usr/local/bin/gcc -- Check for working C compiler: /usr/local/bin/gcc - works -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Detecting C compile features -- Detecting C compile features - done -- CMAKE_BUILD_TYPE:Debug -- CMAKE_SYSTEM_NAME:Linux -- XENABLE_TEST3:OFF -- Looking for pthread.h -- Looking for pthread.h - found -- Performing Test CMAKE_HAVE_LIBC_PTHREAD -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed -- Looking for pthread_create in pthreads -- Looking for pthread_create in pthreads - not found -- Looking for pthread_create in pthread -- Looking for pthread_create in pthread - found -- Found Threads: TRUE -- Configuring done -- Generating done -- Build files have been written to: /mnt/centos-share/workspace/mux/cbuild $ make -j4 Scanning dependencies of target mbase [ 5%] Building CXX object mbase/CMakeFiles/mbase.dir/src/packet.cc.o [ 11%] Linking CXX static library ../lib/libmbase.a [ 11%] Built target mbase Scanning dependencies of target msghandler Scanning dependencies of target epoll [ 17%] Building CXX object message_handle/CMakeFiles/msghandler.dir/src/message_handler.cc.o [ 23%] Building CXX object epoll/CMakeFiles/epoll.dir/src/epoll_tcp_client.cc.o [ 29%] Building CXX object epoll/CMakeFiles/epoll.dir/src/epoll_tcp_server.cc.o [ 35%] Linking CXX static library ../lib/libepoll.a [ 41%] Linking CXX static library ../lib/libmsghandler.a [ 41%] Built target msghandler [ 41%] Built target epoll Scanning dependencies of target transport [ 47%] Building CXX object transport/CMakeFiles/transport.dir/src/tcp_transport.cc.o [ 52%] Linking CXX static library ../lib/libtransport.a [ 52%] Built target transport Scanning dependencies of target echo_client Scanning dependencies of target echo_server Scanning dependencies of target bench_client Scanning dependencies of target bench_server [ 58%] Building CXX object demo/echo/CMakeFiles/echo_client.dir/client.cc.o [ 64%] Building CXX object demo/bench/CMakeFiles/bench_client.dir/client.cc.o [ 70%] Building CXX object demo/echo/CMakeFiles/echo_server.dir/echo_server.cc.o [ 76%] Building CXX object demo/bench/CMakeFiles/bench_server.dir/bench_server.cc.o [ 82%] Linking CXX executable ../../bin/echo_client [ 88%] Linking CXX executable ../../bin/echo_server [ 94%] Linking CXX executable ../../bin/bench_server [100%] Linking CXX executable ../../bin/bench_client [100%] Built target echo_client [100%] Built target echo_server [100%] Built target bench_client [100%] Built target bench_server \u770b\u770b\u751f\u6210\u4e86\u5565\uff1a $ ls cbuild/bin/ bench_client bench_server echo_client echo_server $ ls cbuild/lib/ libepoll.a libmbase.a libmsghandler.a libtransport.a Over! \u5199\u5728\u6700\u540e cmake \u7684\u6784\u5efa\u5176\u5b9e\u8ba4\u771f\u719f\u6089\u4e4b\u540e\uff0c\u4e5f\u8fd8\u662f\u80fd\u5feb\u901f\u4e0a\u624b\u7684\uff0c\u4e0d\u8981\u4ea7\u751f\u6392\u65a5\u5fc3\u7406\uff0c\u4e0d\u7136\u5b66\u8d77\u6765\u5c31\u5f88\u6162\u5f88\u8d39\u52b2\u3002\u6240\u4ee5\u5efa\u8bae\u7b2c\u4e00\u6b21\u63a5\u89e6 cmake \u7684\u6216\u8005\u4ee5\u524d\u4e00\u76f4\u62b5\u89e6 cmake \u7684\u7ae5\u978b\uff0c\u9759\u4e0b\u5fc3\u6765\uff0c\u8ba4\u8ba4\u771f\u771f\u7684\u770b\u5b8c\u672c\u6587\u6216\u8005\u5176\u4ed6\u7684\u5165\u95e8\u4f8b\u5b50\uff0c\u90a3\u4e48\u4f60\u4e5f\u80fd\u5feb\u901f\u5199\u4e00\u4e2a\u591a\u76ee\u5f55\uff0c\u591a\u5c42\u6b21\u7ed3\u6784\u7684 cmake \u5de5\u7a0b\u3002 cmake \u4e2d\u5176\u4ed6\u7684\u4e00\u4e9b\u7528\u6cd5\uff0c\u5efa\u8bae\u968f\u65f6\u67e5\u770b\u5b98\u65b9\u7684 cook book . \u52a0\u6cb9\uff0c\u5c11\u5e74\uff0c\u522b\u6015\uff01 \u53c2\u8003 CMake \u6559\u7a0b | CMake \u4ece\u5165\u95e8\u5230\u5e94\u7528 cmake\u4f7f\u7528\u6559\u7a0b Blog: rebootcat.com email: 2020-04-11 \u4e8e\u676d\u5dde By \u53f2\u77db\u9769","title":"Cmake"},{"location":"cmake/#_1","text":"\u6211\u662f\u4e00\u4e2a linux c++ \u5f00\u53d1\u8005\uff0c\u4f46\u662f\u4e00\u76f4\u5bf9 Makefile \u7684\u8bed\u6cd5\u5f88\u662f\u5934\u75db\uff0c\u6bcf\u6b21\u90fd\u8bb0\u4e0d\u4f4f\uff0c\u6240\u4ee5\u6bcf\u6b21\u5199 Makefile \u90fd\u5f88\u75db\u82e6\uff0cMakefile \u91cc\u9700\u8981\u4f60\u81ea\u5df1\u7f16\u5199\u4f9d\u8d56\u548c\u63a8\u5bfc\u89c4\u5219\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u80fd\u4e0d\u80fd\u7b80\u5355\u70b9\u5462\uff1f \u5bf9\u4e8e\u7f16\u8bd1\u4e00\u4e2a C++ \u5de5\u7a0b\u6765\u8bf4\uff0c\u4e5f\u8bb8\u9700\u8981\u7684\u5c31\u662f\u5934\u6587\u4ef6\u8def\u5f84\u3001\u5e93\u8def\u5f84\u3001\u7f16\u8bd1\u53c2\u6570\uff0c\u5269\u4e0b\u7684\u4e1c\u897f\u57fa\u672c\u4e5f\u4e0d\u91cd\u8981\uff0c\u8fd9\u4e09\u6837\u8db3\u591f\u53bb\u7f16\u8bd1\u4e00\u4e2a\u5de5\u7a0b\u4e86\u3002\u6240\u4ee5\u6709\u6ca1\u6709\u4e00\u4e2a\u5de5\u5177\u80fd\u7b80\u5355\u70b9\u7684\u53bb\u5b9e\u73b0 C++ \u9879\u76ee\u7684\u6784\u5efa\u5462\uff1f \u7b54\u6848\u662f\u6709\u7684\uff0c\u4e0a\u4e00\u7bc7\u535a\u6587 scons\u6784\u5efaC++\u9879\u76ee \u4ecb\u7ecd\u4e86 \u4f7f\u7528 scons \u6765\u6784\u5efa C++ \u9879\u76ee\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u7f16\u5199\u6784\u5efa\u811a\u672c\u7684\u6548\u7387\uff0c\u4f7f\u7528\u8d77\u6765\u4e5f\u6781\u4e3a\u65b9\u4fbf\uff0c\u5bf9\u4e8e\u719f\u6089 python \u7684\u7ae5\u978b\u6765\u8bf4\u771f\u7684\u662f\u5927\u5927\u7684\u798f\u97f3\uff1b\u4f46 scons \u7684\u95ee\u9898\u5c31\u662f\u5728\u5927\u578b\u9879\u76ee\u7684\u65f6\u5019\u6784\u5efa\u8d77\u6765\u53ef\u80fd\u4f1a\u5f88\u6162\uff08\u542c\u8bf4\u7684\uff09\u3002\u90a3\u4e48\u6709\u6ca1\u6709\u5176\u4ed6\u7684\u5de5\u5177\u5462\uff1f \u5f53\u7136\u6709\uff0ccmake \u5c31\u662f\u8fd9\u6837\u7684\u4e00\u4e2a\u5de5\u5177\uff0c\u65e2\u80fd\u6ee1\u8db3\u8de8\u5e73\u53f0\u7684\u7f16\u8bd1\uff0c\u5e76\u4e14\u5c4f\u853d\u4e86 Makefile \u86cb\u75bc\u7684\u8bed\u6cd5\uff0c\u4f7f\u7528\u4e00\u79cd\u66f4\u52a0\u7b80\u5355\u7684\u8bed\u6cd5\u7f16\u5199\u6784\u5efa\u811a\u672c\uff0c\u7528\u5728\u5927\u578b\u9879\u76ee\u4e5f\u6beb\u65e0\u538b\u529b\u3002 \u5f53\u7136\uff0c\u5bf9\u4e8e\u6211\u4e2a\u4eba\u6765\u8bf4\uff0ccmake \u7684\u4f7f\u7528\u8fd8\u662f\u6709\u95e8\u69db\u7684\uff0c\u521a\u63a5\u89e6 cmake \u53ef\u80fd\u8fd8\u662f\u4f1a\u88ab\u5b83\u7684\u8bed\u6cd5\u641e\u7684\u5934\u75bc\uff08cmake \u7684\u8bed\u6cd5\u4e5f\u8fd8\u662f\u633a\u6298\u817e\u7684\uff09\u3002\u4f46\u662f\u522b\u6025\uff0c\u6c89\u4e0b\u5fc3\u6765\uff0c\u672c\u7bc7\u535a\u6587\u5c31\u5e26\u4f60\u4ece cmake \u5165\u95e8\u5230\u7f16\u5199\u4e00\u4e2a\u590d\u6742\u5de5\u7a0b\u7684\u5b9e\u6218\u3002","title":"\u524d\u8a00"},{"location":"cmake/#cmake","text":"","title":"CMake"},{"location":"cmake/#cmake_1","text":"\u8fd9\u91cc\u76f4\u63a5\u5f15\u7528\u5b98\u7f51\u7684\u89e3\u91ca\uff1a CMake is an open-source, cross-platform family of tools designed to build, test and package software. CMake is used to control the software compilation process using simple platform and compiler independent configuration files, and generate native makefiles and workspaces that can be used in the compiler environment of your choice. The suite of CMake tools were created by Kitware in response to the need for a powerful, cross-platform build environment for open-source projects such as ITK and VTK. CMake \u662f\u4e00\u4e2a\u5f00\u6e90\u4f60\u8de8\u5e73\u53f0\u7684\u6784\u5efa\u5de5\u5177\uff0c\u8bed\u6cd5\u7b80\u5355\uff0c\u7f16\u8bd1\u72ec\u7acb\uff0c\u5e76\u4e14\u5f88\u591a\u77e5\u540d\u5927\u578b\u9879\u76ee\u4e5f\u5728\u7528 CMake,\u6bd4\u5982 KDE\u3001Netflix \u3001ReactOS\u7b49\u3002 OK\uff0c\u8bdd\u4e0d\u591a\u8bf4\uff0c\u5982\u4f55\u4f7f\u7528\u5462\uff1f","title":"\u4ec0\u4e48\u662f cmake"},{"location":"cmake/#cmake_2","text":"sudo yum install cmake3.x86_64 \u73b0\u5728\u6700\u65b0\u7248\u7684 cmake \u5df2\u7ecf\u5230 3.18.2 \u4e86\u3002\u6211\u4f7f\u7528\u7684\u662f 3.17.2 \u7248\u672c\u3002 $ cmake --version cmake version 3.17.2 CMake suite maintained and supported by Kitware (kitware.com/cmake).","title":"\u5b89\u88c5 cmake"},{"location":"cmake/#cmake_3","text":"\u4f7f\u7528 cmake \u6765\u6784\u5efa C++ \u9879\u76ee\uff0c\u9700\u8981\u5148\u7f16\u5199 cmake \u6784\u5efa\u811a\u672c\uff0c\u6587\u4ef6\u540d\u4e3a CMakeLists.txt\uff0c\u9879\u76ee\u9876\u5c42\u76ee\u5f55\u9700\u8981\u653e\u4e00\u4e2a CMakeLists.txt\uff0c\u540c\u65f6\u5b50\u76ee\u5f55\u53ef\u4ee5\u6839\u636e\u9700\u8981\u653e\u7f6e CMakeLists.txt\u3002 \u90a3\u4e48\u5148\u6765\u770b\u770b CMakeLists.txt \u957f\u5565\u6837? cmake_minimum_required(VERSION 3.8.0) set(CMAKE_CXX_STANDARD 11) set(CMAKE_CXX_STANDARD_REQUIRED ON) set(CMAKE_CXX_EXTENSIONS OFF) set(CMAKE_C_STANDARD 99) set(CMAKE_C_STANDARD_REQUIRED ON) set(CMAKE_C_EXTENSIONS OFF) project(MUX CXX C) add_definitions( -DTEST1 # define marco -DTEST2 # define marco ) # common compiling options add_compile_options( -Wl,--no-as-needed -fno-strict-aliasing -fthreadsafe-statics -pthread #-fstack-protector-strong -fno-short-enums -fPIC ) option(XENABLE_TEST3 enable test3 marco OFF) set(EXECUTABLE_OUTPUT_PATH ${MUX_BINARY_DIR}/bin) set(LIBRARY_OUTPUT_PATH ${MUX_BINARY_DIR}/lib) if (XENABLE_TEST3) add_definitions(-DTEST3) endif() if (NOT CMAKE_BUILD_TYPE) set(CMAKE_BUILD_TYPE Debug) endif() message(STATUS CMAKE_BUILD_TYPE: ${CMAKE_BUILD_TYPE}) message(STATUS CMAKE_SYSTEM_NAME: ${CMAKE_SYSTEM_NAME}) message(STATUS XENABLE_TEST3: ${XENABLE_TEST3}) find_package(Threads REQUIRED) # include header dirs include_directories(${CMAKE_SOURCE_DIR}) # project dir include_directories(${CMAKE_SOURCE_DIR}/third-party/include) # project dir include_directories(${CMAKE_CURRENT_BINARY_DIR}) # current CMakeLists.txt dir (including sub dir) # link lib dirs link_directories(${CMAKE_SOURCE_DIR}/third-party/lib) link_directories(${LIBRARY_OUTPUT_PATH}) # generate in building add_subdirectory(demo/bench) add_subdirectory(demo/echo) add_subdirectory(epoll) add_subdirectory(mbase) add_subdirectory(message_handle) add_subdirectory(transport) \u5b8c\u6574\u7684 CMakeLists.txt \u89c1 \u6211\u7684github \uff0c\u540c\u65f6\u6211\u4e5f\u4f1a\u4ee5\u6211\u7684github\u9879\u76ee mux \u4e3a\u4f8b\uff0c\u4ecb\u7ecd cmake \u7684\u4f7f\u7528\u3002 \u4e0a\u9762\u7684 CMakeLists.txt \u4e4d\u4e00\u770b\uff0c\u597d\u591a\u5185\u5bb9\uff0c\u4f46\u662f\u522b\u614c\uff0c\u6211\u4eec\u6765\u4e00\u4e2a\u4e2a\u8bf4\u3002","title":"\u521d\u8bc6 cmake"},{"location":"cmake/#cmake_4","text":"\u6ce8\u610f\uff1a cmake \u7684\u8bed\u6cd5\u53ef\u4ee5\u5206\u4e3a\u547d\u4ee4(\u51fd\u6570\uff09\u548c\u53c2\u6570\u3002 \u547d\u4ee4\u4e0d\u7f3a\u5206\u5927\u5c0f\u5199\uff0c\u53c2\u6570\u533a\u5206\u5927\u5c0f\u5199 \u3002 \u6ce8\u610f\uff1a cmake \u7684\u8bed\u6cd5\u53ef\u4ee5\u5206\u4e3a\u547d\u4ee4(\u51fd\u6570\uff09\u548c\u53c2\u6570\u3002 \u547d\u4ee4\u4e0d\u7f3a\u5206\u5927\u5c0f\u5199\uff0c\u53c2\u6570\u533a\u5206\u5927\u5c0f\u5199 \u3002","title":"\u8be6\u89e3 cmake"},{"location":"cmake/#cmake_5","text":"cmake_minimum_required(VERSION 3.8.0)","title":"\u8bbe\u7f6e cmake \u7248\u672c\u7684\u8981\u6c42"},{"location":"cmake/#cmake-c-c11","text":"set(CMAKE_CXX_STANDARD 11) set(CMAKE_CXX_STANDARD_REQUIRED ON) set(CMAKE_CXX_EXTENSIONS OFF) set(CMAKE_C_STANDARD 99) set(CMAKE_C_STANDARD_REQUIRED ON) set(CMAKE_C_EXTENSIONS OFF)","title":"\u5728 cmake \u4e2d\u8bbe\u7f6e c++ \u6807\u51c6\uff0c\u542f\u7528 c++11 \u6216\u4ee5\u4e0a(\u6839\u636e\u9879\u76ee\u7684\u9700\u6c42\u6765\uff09"},{"location":"cmake/#_2","text":"project(MUX CXX C) \u8bbe\u7f6e\u5b8c\u9879\u76ee\u540d\u79f0\u4e4b\u540e\uff0c\u4f1a\u81ea\u52a8\u521b\u5efa\u4e24\u4e2a\u53d8\u91cf PROJECT-NAME _SOURCE_DIR \u548c PROJECT-NAME _BINARY_DIR \uff0c\u5bf9\u4e8e mux \u8fd9\u4e2a\u9879\u76ee\u6765\u8bf4\uff0c\u4e5f\u5c31\u662f MUX_SOURCE_DIR \u548c MUX_BINARY_DIR \u3002 MUX_SOURCE_DIR \u8868\u793a\u5de5\u7a0b\u9876\u5c42\u76ee\u5f55\uff1b MUX_BINARY_DIR \u8868\u793a cmake \u6784\u5efa\u53d1\u751f\u7684\u76ee\u5f55\u3002 \u56e0\u4e3a\u4f60\u4e00\u5b9a\u719f\u6089\u6216\u8005\u7528\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u6216\u6b65\u9aa4\uff1a mkdir cbuild cd cbuild cmake .. make make test make install \u901a\u5e38\u6211\u4eec\u4f1a\u5355\u72ec\u65b0\u5efa\u4e00\u4e2a cbuild \u76ee\u5f55\uff0c\u7528\u6765\u6784\u5efa\u9879\u76ee\uff0c\u5e76\u4e14\u5b58\u653e\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684\u6587\u4ef6\u3002\u90a3\u4e48 cbuild \u76ee\u5f55\u5c31\u662f MUX_BINARY_DIR \u8868\u793a\u7684\u76ee\u5f55\uff0ccbuild \u7684\u4e0a\u4e00\u7ea7\u76ee\u5f55\u4e5f\u5c31\u662f\u9879\u76ee\u9876\u5c42\u76ee\u5f55\u5c31\u662f MUX_SOURCE_DIR \u8868\u793a\u7684\u76ee\u5f55\u3002 \u5982\u679c\u4f60\u6ca1\u6709\u5355\u72ec\u65b0\u5efa cbuild \u76ee\u5f55\uff0c\u800c\u662f\u76f4\u63a5\u5728\u9879\u76ee\u9876\u5c42\u76ee\u5f55\u4f7f\u7528 cmake .. \uff0c\u90a3\u4e48\u4e0a\u9762\u4e24\u4e2a\u53d8\u91cf\u5747\u6307\u9879\u76ee\u9876\u5c42\u76ee\u5f55\u3002 \u8be6\u89c1 https://cmake.org/cmake/help/latest/command/project.html","title":"\u8bbe\u7f6e\u9879\u76ee\u540d\u4ee5\u53ca\u9879\u76ee\u8bed\u8a00"},{"location":"cmake/#_3","text":"add_definitions( -DTEST1 # define marco -DTEST2 # define marco ) \u4e0a\u9762\u662f\u6211\u968f\u4fbf\u5199\u7684\u4e24\u4e2a\u5b8f TEST1 \u548c TEST2 \uff0c\u90a3\u4e48\u5728c++\u4ee3\u7801\u4e2d\u901a\u5e38\u662f\u8fd9\u6837\u7684\uff1a #ifdef TEST1 // do something about test1 #endif #ifdef TEST2 // do something about test2 #endif \u5f53\u7136\u8981\u5f00\u542f\u8fd9\u4e2a\u5b8f\u4e5f\u53ef\u4ee5\u4e0d\u7528\u5199\u5728 CMakeLists.txt \u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd9\u6837\u4f7f\u7528\uff1a mkdir cbuild cd cbuild cmake .. -DTEST1 \u8fd9\u4e2a\u6839\u636e\u4f60\u7684\u9879\u76ee\u9700\u6c42\u6765\u64cd\u4f5c\u3002","title":"\u6dfb\u52a0\u7f16\u8bd1\u5b8f"},{"location":"cmake/#_4","text":"option(XENABLE_TEST3 enable test3 marco OFF) if (XENABLE_TEST3) add_definitions(-DTEST3) endif() if (NOT CMAKE_BUILD_TYPE) set(CMAKE_BUILD_TYPE Debug) endif() \u4f7f\u7528 option \u547d\u4ee4\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e00\u4e9b\u53d8\u91cf\u7684\u503c\uff0c\u4f5c\u4e3a\u4e00\u4e9b\u6761\u4ef6\u5224\u65ad\u7684\u5f00\u5173\u5f88\u65b9\u4fbf\u3002 \u8be6\u89c1 https://cmake.org/cmake/help/latest/command/option.html","title":"\u5b9a\u4e49\u4e00\u4e9b\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u53ef\u9009\u9879"},{"location":"cmake/#_5","text":"# common compiling options add_compile_options( -Wl,--no-as-needed -fno-strict-aliasing -fthreadsafe-statics -pthread #-fstack-protector-strong -fno-short-enums -fPIC ) \u8fd9\u91cc\u5c31\u662f\u4e00\u4e9b\u7f16\u8bd1\u9009\u9879\uff0c\u6839\u636e\u81ea\u5df1\u7684\u9879\u76ee\u9700\u6c42\u4fee\u6539\u3002","title":"\u6dfb\u52a0\u7f16\u8bd1\u9009\u9879"},{"location":"cmake/#binary-executable-binary-lib","text":"set(EXECUTABLE_OUTPUT_PATH ${MUX_BINARY_DIR}/bin) set(LIBRARY_OUTPUT_PATH ${MUX_BINARY_DIR}/lib) \u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7528\u5230\u4e86 MUX_BINARY_DIR \u8fd9\u4e2a\u53d8\u91cf\uff0c\u4e5f\u5c31\u662f\u8bf4\u6700\u7ec8\u7f16\u8bd1\u51fa\u6765\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u548clib \u5e93\u4f1a\u5b58\u653e\u5728 cbuild/bin \u548c cbuild/lib \u4e2d\u3002","title":"\u8bbe\u7f6e\u7f16\u8bd1\u4e8c\u8fdb\u5236(binary-executable \u548c binary-lib\uff09\u5b58\u653e\u8def\u5f84"},{"location":"cmake/#_6","text":"message(STATUS CMAKE_BUILD_TYPE: ${CMAKE_BUILD_TYPE}) message(STATUS CMAKE_SYSTEM_NAME: ${CMAKE_SYSTEM_NAME}) message(STATUS XENABLE_TEST3: ${XENABLE_TEST3}) \u6253\u5370\u4e00\u4e9b\u8c03\u8bd5\u4fe1\u606f\uff0c\u6216\u8005\u7f16\u8bd1\u4fe1\u606f\u5230\u7ec8\u7aef\uff0c\u4f7f\u7528\u7684\u662f message \u547d\u4ee4\u3002 \u8be6\u89c1 https://cmake.org/cmake/help/latest/command/message.html \u3002","title":"\u6253\u5370\u4e00\u4e9b\u4fe1\u606f\u5230\u7ec8\u7aef"},{"location":"cmake/#_7","text":"# include header dirs include_directories(${CMAKE_SOURCE_DIR}) # project dir include_directories(${CMAKE_SOURCE_DIR}/third-party/include) # project dir include_directories(${CMAKE_CURRENT_BINARY_DIR}) # current CMakeLists.txt dir (including sub dir) \u5206\u522b\u89e3\u91ca\u4e00\u4e0b\uff1a CMAKE_SOURCE_DIR \u8868\u793a\u5de5\u7a0b\u9876\u5c42\u76ee\u5f55\uff0c\u4e5f\u5c31\u662f MUX_SOURCE_DIR \uff1b CMAKE_CURRENT_BINARY_DIR \u8868\u793a\u5f53\u524d\u5904\u7406\u7684 CMakeLists.txt \u6240\u5728\u7684\u76ee\u5f55\uff0c\u5bf9\u4e8e\u5b50\u76ee\u5f55\u4e2d\u7684 CMakeLists.txt \u6765\u8bf4\uff0c\u5373\u8868\u793a\u8fd9\u4e2a\u5b50\u76ee\u5f55\u3002 \u901a\u5e38\u8fd9\u4e24\u4e2a\u662f\u5e38\u7528\u7684\uff0c\u5fc5\u987b\u7684\u3002\u7136\u540e\u4f7f\u7528 include_directories \u547d\u4ee4\u5305\u542b\u5176\u4ed6\u7684\u4e00\u4e9b\u5934\u6587\u4ef6\u8def\u5f84\u3002","title":"\u8bbe\u7f6e\u5934\u6587\u4ef6\u8def\u5f84"},{"location":"cmake/#_8","text":"# link lib dirs link_directories(${CMAKE_SOURCE_DIR}/third-party/lib) link_directories(${LIBRARY_OUTPUT_PATH}) # generate in building LIBRARY_OUTPUT_PATH \u5c31\u662f\u4e0a\u9762\u8bbe\u7f6e\u7684\u7f16\u8bd1\u76ee\u6807\u4e8c\u8fdb\u5236\u5e93\u7684\u5b58\u653e\u8def\u5f84\uff0c\u56e0\u4e3a\u5b9e\u9645\u9879\u76ee\u4e2d\uff0c\u5b50\u6a21\u5757\u4e4b\u95f4\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u4f9d\u8d56\uff0c\u5b50\u6a21\u5757\u5355\u72ec\u7f16\u8bd1\u6210\u4e00\u4e2a\u5e93\uff0c\u7136\u540e\u8ba9\u5176\u4ed6\u6a21\u5757\u94fe\u63a5\u3002\u8fd9\u4e2a\u76ee\u5f55\u4e5f\u5c31\u662f cbuild/lib \u76ee\u5f55\u3002","title":"\u8bbe\u7f6e\u4f9d\u8d56\u5e93\u7684\u8def\u5f84"},{"location":"cmake/#_9","text":"add_subdirectory(demo/bench) add_subdirectory(demo/echo) add_subdirectory(epoll) add_subdirectory(mbase) add_subdirectory(message_handle) add_subdirectory(transport) \u4f7f\u7528 add_subdirectory \u547d\u4ee4\u628a\u5b50\u6a21\u5757\u5305\u542b\u8fdb\u6765\uff0c\u5fc5\u987b\u786e\u4fdd\u6bcf\u4e2a\u5b50\u76ee\u5f55\u4e0b\u9762\u6709\u4e00\u4e2a CMakeLists.txt \u6587\u4ef6\uff0c\u4e0d\u7136\u4f1a\u62a5\u9519\u3002 \u4ee5\u4e0a\u5c31\u662f\u5de5\u7a0b\u9876\u5c42\u76ee\u5f55\u7684 CMakeLists.txt \u7684\u5185\u5bb9\uff0c\u5206\u6790\u4e0b\u6765\u662f\u4e0d\u662f\u5f88\u6e05\u695a\u5462 \uff1f \u90a3\u4e48\u5de5\u7a0b\u9876\u5c42\u76ee\u5f55\u7684 CMakeLists.txt \u5176\u5b9e\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u8bbe\u7f6e\u4e00\u4e9b\u57fa\u672c\u7684\u53d8\u91cf\uff0c\u5b8f\u5f00\u5173\uff0c\u7f16\u8bd1\u53c2\u6570\uff0c\u5934\u6587\u4ef6\u8def\u5f84\uff0c\u4f9d\u8d56\u5e93\u8def\u5f84\uff0c\u7f16\u8bd1\u76ee\u6807\u4fdd\u5b58\u8def\u5f84\u7b49\u7b49\uff0c\u5b50\u76ee\u5f55\u4e2d\u7684 CMakeLists.txt \u624d\u662f\u771f\u6b63\u4ea7\u751f\u7f16\u8bd1\u76ee\u6807\u7684\uff08exe\u548clib)\u3002","title":"\u5f15\u5165\u5b50\u6a21\u5757(\u5b50\u76ee\u5f55\uff09"},{"location":"cmake/#_10","text":"# keep all cpp files in varibale ${epoll_src} aux_source_directory(./src epoll_src) add_library(epoll STATIC ${epoll_src}) add_dependencies(epoll mbase ) target_link_libraries(epoll mbase pthread) \u6e90\u6587\u4ef6\u5728\u8fd9\uff1a \u6233\u6211 \u4f7f\u7528 aux_source_directory \u6dfb\u52a0\u6e90\u6587\u4ef6\uff0c\u76f8\u5f53\u4e8e\u628a src \u76ee\u5f55\u4e0b\u7684\u6240\u6709 c++ \u6587\u4ef6\u4fdd\u5b58\u5230 epoll_src \u8fd9\u4e2a\u53d8\u91cf\u4e2d\uff1b \u4f7f\u7528 add_library \u751f\u6210\u76ee\u6807\u5e93\uff08\u6839\u636e\u9700\u8981\u53ef\u4ee5\u751f\u6210\u9759\u6001\u5e93\u548c\u52a8\u6001\u5e93\uff0c\u5206\u522b\u4f7f\u7528 STATIC \u548c SHARED) \u7136\u540e\u5c31\u662f\u6dfb\u52a0\u8fd9\u4e2a\u6a21\u5757\u9700\u8981\u4f9d\u8d56\u5230\u7684\u5176\u4ed6\u6a21\u5757\uff0c\u4ee5\u53ca\u94fe\u63a5\u53c2\u6570\u3002 \u4e0a\u9762\u7684\u4ee3\u7801\u6700\u7ec8\u5c31\u4f1a\u5728 cbuild/lib \u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u4e2a libepoll.a \u6587\u4ef6\u3002","title":"\u751f\u6210\u9759\u6001\u5e93/\u52a8\u6001\u5e93"},{"location":"cmake/#_11","text":"# build target echo_server add_executable(echo_server echo_server.cc) add_dependencies(echo_server transport msghandler mbase) target_link_libraries(echo_server transport msghandler mbase) # build target echo_client add_executable(echo_client client.cc) add_dependencies(echo_client transport msghandler mbase) target_link_libraries(echo_client transport msghandler mbase) \u6e90\u6587\u4ef6\u5728\u8fd9\uff1a \u6233\u6211 \u548c\u751f\u6210\u5e93\u5927\u4f53\u662f\u7c7b\u4f3c\u7684\uff0c\u533a\u522b\u662f\u4f7f\u7528\u7684\u662f add_executable \u8fd9\u4e2a\u547d\u4ee4\u3002 \u5176\u4ed6\u5b50\u6a21\u5757\u7684 CMakeLists.txt \u89c1 \u6211\u7684github .","title":"\u751f\u6210\u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u6587\u4ef6"},{"location":"cmake/#cmake_6","text":"\u4e0a\u9762\u8be6\u7ec6\u7684\u4ecb\u7ecd\u4e86 CMakeLists.txt \u7684\u5199\u6cd5\uff0c\u5982\u679c\u4eff\u7167\u672c\u6587\uff0c\u5e94\u8be5\u4e5f\u80fd\u5199\u51fa\u9002\u5408\u4f60\u9879\u76ee\u7684\u6784\u5efa\u811a\u672c\uff0c\u4f46\u662f\u53ef\u80fd\u8fd8\u4e0d\u591f\uff0c\u5176\u4ed6\u8bed\u6cd5\u81ea\u884c google \u5b66\u4e60\u3002 \u4e0a\u9762\u5176\u5b9e\u662f\u4ee5\u6211\u7684\u9879\u76ee \u8fdb\u884c\u7684\u6f14\u793a\uff0c\u6709\u5fc5\u8981\u89e3\u8bfb\u4e00\u4e0b\u8fd9\u4e2a\u9879\u76ee\u7684\u7ed3\u6784\u5c42\u6b21\uff1a $ tree mux -d mux \u251c\u2500\u2500 demo \u2502 \u251c\u2500\u2500 bench \u2502 \u2514\u2500\u2500 echo \u251c\u2500\u2500 epoll \u2502 \u251c\u2500\u2500 include \u2502 \u2514\u2500\u2500 src \u251c\u2500\u2500 mbase \u2502 \u2514\u2500\u2500 src \u251c\u2500\u2500 message_handle \u2502 \u251c\u2500\u2500 include \u2502 \u2514\u2500\u2500 src \u251c\u2500\u2500 third-party \u2502 \u251c\u2500\u2500 include \u2502 \u2502 \u251c\u2500\u2500 nlohmann \u2502 \u2502 \u2514\u2500\u2500 spdlog \u2502 \u2502 \u251c\u2500\u2500 cfg \u2502 \u2502 \u251c\u2500\u2500 details \u2502 \u2502 \u251c\u2500\u2500 fmt \u2502 \u2502 \u2502 \u2514\u2500\u2500 bundled \u2502 \u2502 \u2514\u2500\u2500 sinks \u2502 \u2514\u2500\u2500 lib \u2514\u2500\u2500 transport \u251c\u2500\u2500 include \u2514\u2500\u2500 src 24 directories mux \u662f\u5de5\u7a0b\u9876\u5c42\u76ee\u5f55\uff0c\u4e0b\u9762\u5305\u542b\u7684 epoll \u3001 mbase \u3001 message_handle \u3001 transport \u8fd9\u51e0\u4e2a\u76ee\u5f55\uff0c\u5747\u6253\u5305\u6210\u4e00\u4e2a\u9759\u6001\u5e93\uff1b demo \u76ee\u5f55\u4e0b\u5206\u522b\u5305\u542b bench \u548c echo \u4e24\u4e2a\u76ee\u5f55\uff0c\u8fd9\u4e24\u4e2a\u76ee\u5f55\u4e0b\u9700\u8981\u6784\u5efa\u53ef\u6267\u884c\u7a0b\u5e8f\u3002 \u6240\u4ee5\u9996\u5148\u662f epoll \u3001 mbase \u3001 message_handle \u3001 transport \u8fd9\u51e0\u4e2a\u76ee\u5f55\u751f\u6210\u9759\u6001\u5e93\uff0c\u7136\u540e bench \u548c echo \u4e0b\u7684\u4ee3\u7801\u4f9d\u8d56\u4e8e\u524d\u9762\u7684\u51e0\u4e2a\u6a21\u5757\uff0c\u751f\u6210\u53ef\u6267\u884c\u7a0b\u5e8f\u3002 \u524d\u9762\u5176\u5b9e\u5df2\u7ecf\u63d0\u5230\u4e86\uff0c\u57fa\u672c\u7684\u6784\u5efa\u547d\u4ee4\u5982\u4e0b\uff1a mkdir cbuild cd cbuild cmake .. make -j4 \u5176\u4e2d\u6ce8\u610f\uff0c\u5982\u679c\u4f60\u6ca1\u6709\u5355\u72ec\u6784\u5efa cbuild \u76ee\u5f55\u7684\u8bdd\uff0c\u53ef\u80fd\u4f1a\u751f\u6210\u4e00\u4e9b\u4e2d\u95f4\u4e34\u65f6\u6587\u4ef6\u6c61\u67d3\u4e86\u76ee\u5f55\u3002\u5e76\u4e14\u6ce8\u610f\uff0ccmake \u540e\u9762\u7684 .. \u8868\u793a\u7684\u662f\u5de5\u7a0b\u9876\u5c42\u7684 CMakeLists.txt \u7684\u76ee\u5f55\u3002\u6240\u4ee5\u5982\u679c\u76f4\u63a5\u4f7f\u7528\u7684\u662f\u5de5\u7a0b\u9876\u5c42\u76ee\u5f55\u6784\u5efa\u7684\u8bdd\uff0c\u5c31\u5e94\u8be5\u662f cmake . $ cmake .. -- The CXX compiler identification is GNU 4.8.5 -- The C compiler identification is GNU 4.8.5 -- Check for working CXX compiler: /usr/local/bin/c++ -- Check for working CXX compiler: /usr/local/bin/c++ - works -- Detecting CXX compiler ABI info -- Detecting CXX compiler ABI info - done -- Detecting CXX compile features -- Detecting CXX compile features - done -- Check for working C compiler: /usr/local/bin/gcc -- Check for working C compiler: /usr/local/bin/gcc - works -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Detecting C compile features -- Detecting C compile features - done -- CMAKE_BUILD_TYPE:Debug -- CMAKE_SYSTEM_NAME:Linux -- XENABLE_TEST3:OFF -- Looking for pthread.h -- Looking for pthread.h - found -- Performing Test CMAKE_HAVE_LIBC_PTHREAD -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed -- Looking for pthread_create in pthreads -- Looking for pthread_create in pthreads - not found -- Looking for pthread_create in pthread -- Looking for pthread_create in pthread - found -- Found Threads: TRUE -- Configuring done -- Generating done -- Build files have been written to: /mnt/centos-share/workspace/mux/cbuild $ make -j4 Scanning dependencies of target mbase [ 5%] Building CXX object mbase/CMakeFiles/mbase.dir/src/packet.cc.o [ 11%] Linking CXX static library ../lib/libmbase.a [ 11%] Built target mbase Scanning dependencies of target msghandler Scanning dependencies of target epoll [ 17%] Building CXX object message_handle/CMakeFiles/msghandler.dir/src/message_handler.cc.o [ 23%] Building CXX object epoll/CMakeFiles/epoll.dir/src/epoll_tcp_client.cc.o [ 29%] Building CXX object epoll/CMakeFiles/epoll.dir/src/epoll_tcp_server.cc.o [ 35%] Linking CXX static library ../lib/libepoll.a [ 41%] Linking CXX static library ../lib/libmsghandler.a [ 41%] Built target msghandler [ 41%] Built target epoll Scanning dependencies of target transport [ 47%] Building CXX object transport/CMakeFiles/transport.dir/src/tcp_transport.cc.o [ 52%] Linking CXX static library ../lib/libtransport.a [ 52%] Built target transport Scanning dependencies of target echo_client Scanning dependencies of target echo_server Scanning dependencies of target bench_client Scanning dependencies of target bench_server [ 58%] Building CXX object demo/echo/CMakeFiles/echo_client.dir/client.cc.o [ 64%] Building CXX object demo/bench/CMakeFiles/bench_client.dir/client.cc.o [ 70%] Building CXX object demo/echo/CMakeFiles/echo_server.dir/echo_server.cc.o [ 76%] Building CXX object demo/bench/CMakeFiles/bench_server.dir/bench_server.cc.o [ 82%] Linking CXX executable ../../bin/echo_client [ 88%] Linking CXX executable ../../bin/echo_server [ 94%] Linking CXX executable ../../bin/bench_server [100%] Linking CXX executable ../../bin/bench_client [100%] Built target echo_client [100%] Built target echo_server [100%] Built target bench_client [100%] Built target bench_server \u770b\u770b\u751f\u6210\u4e86\u5565\uff1a $ ls cbuild/bin/ bench_client bench_server echo_client echo_server $ ls cbuild/lib/ libepoll.a libmbase.a libmsghandler.a libtransport.a Over!","title":"cmake \u7f16\u8bd1\u6784\u5efa"},{"location":"cmake/#_12","text":"cmake \u7684\u6784\u5efa\u5176\u5b9e\u8ba4\u771f\u719f\u6089\u4e4b\u540e\uff0c\u4e5f\u8fd8\u662f\u80fd\u5feb\u901f\u4e0a\u624b\u7684\uff0c\u4e0d\u8981\u4ea7\u751f\u6392\u65a5\u5fc3\u7406\uff0c\u4e0d\u7136\u5b66\u8d77\u6765\u5c31\u5f88\u6162\u5f88\u8d39\u52b2\u3002\u6240\u4ee5\u5efa\u8bae\u7b2c\u4e00\u6b21\u63a5\u89e6 cmake \u7684\u6216\u8005\u4ee5\u524d\u4e00\u76f4\u62b5\u89e6 cmake \u7684\u7ae5\u978b\uff0c\u9759\u4e0b\u5fc3\u6765\uff0c\u8ba4\u8ba4\u771f\u771f\u7684\u770b\u5b8c\u672c\u6587\u6216\u8005\u5176\u4ed6\u7684\u5165\u95e8\u4f8b\u5b50\uff0c\u90a3\u4e48\u4f60\u4e5f\u80fd\u5feb\u901f\u5199\u4e00\u4e2a\u591a\u76ee\u5f55\uff0c\u591a\u5c42\u6b21\u7ed3\u6784\u7684 cmake \u5de5\u7a0b\u3002 cmake \u4e2d\u5176\u4ed6\u7684\u4e00\u4e9b\u7528\u6cd5\uff0c\u5efa\u8bae\u968f\u65f6\u67e5\u770b\u5b98\u65b9\u7684 cook book . \u52a0\u6cb9\uff0c\u5c11\u5e74\uff0c\u522b\u6015\uff01","title":"\u5199\u5728\u6700\u540e"},{"location":"cmake/#_13","text":"CMake \u6559\u7a0b | CMake \u4ece\u5165\u95e8\u5230\u5e94\u7528 cmake\u4f7f\u7528\u6559\u7a0b Blog: rebootcat.com email: 2020-04-11 \u4e8e\u676d\u5dde By \u53f2\u77db\u9769","title":"\u53c2\u8003"},{"location":"scons_build_cplusplus/","text":"title: Scons\u6784\u5efaC++\u9879\u76ee date: 2020/04/11 11:23:58 tags: - blockchain - attack - bitcoin categories: - blockchain comments: \u524d\u8a00 \u6211\u662f\u4e00\u4e2a linux c++ \u5f00\u53d1\u8005\uff0c\u4f46\u662f\u4e00\u76f4\u5bf9 Makefile \u7684\u8bed\u6cd5\u5f88\u662f\u5934\u75db\uff0c\u6bcf\u6b21\u90fd\u8bb0\u4e0d\u4f4f\uff0c\u6240\u4ee5\u6bcf\u6b21\u5199 Makefile \u90fd\u5f88\u75db\u82e6\uff0cMakefile \u91cc\u9700\u8981\u4f60\u81ea\u5df1\u7f16\u5199\u4f9d\u8d56\u548c\u63a8\u5bfc\u89c4\u5219\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u80fd\u4e0d\u80fd\u7b80\u5355\u70b9\u5462\uff1f \u5bf9\u4e8e\u7f16\u8bd1\u4e00\u4e2a C++ \u5de5\u7a0b\u6765\u8bf4\uff0c\u4e5f\u8bb8\u9700\u8981\u7684\u5c31\u662f\u5934\u6587\u4ef6\u8def\u5f84\u3001\u5e93\u8def\u5f84\u3001\u7f16\u8bd1\u53c2\u6570\uff0c\u5269\u4e0b\u7684\u4e1c\u897f\u57fa\u672c\u4e5f\u4e0d\u91cd\u8981\uff0c\u8fd9\u4e09\u6837\u8db3\u591f\u53bb\u7f16\u8bd1\u4e00\u4e2a\u5de5\u7a0b\u4e86\u3002\u6240\u4ee5\u6709\u6ca1\u6709\u4e00\u4e2a\u5de5\u5177\u80fd\u7b80\u5355\u70b9\u7684\u53bb\u5b9e\u73b0 C++ \u9879\u76ee\u7684\u6784\u5efa\u5462\uff1f \u7b54\u6848\u662f\u6709\u7684\uff0cScons \u5c31\u662f\u7b54\u6848\u3002 Scons \u4ec0\u4e48\u662f scons \u8fd9\u91cc\u76f4\u63a5\u5f15\u7528\u5b98\u7f51\u7684\u89e3\u91ca\uff1a What is SCons? SCons is an Open Source software construction tool\u2014that is, a next-generation build tool. Think of SCons as an improved, cross-platform substitute for the classic Make utility with integrated functionality similar to autoconf/automake and compiler caches such as ccache. In short, SCons is an easier, more reliable and faster way to build software. What makes SCons better? Configuration files are Python scripts--use the power of a real programming language to solve build problems. Reliable, automatic dependency analysis built-in for C, C++ and Fortran--no more \"make depend\" or \"make clean\" to get all of the dependencies. Dependency analysis is easily extensible through user-defined dependency Scanners for other languages or file types. Built-in support for C, C++, D, Java, Fortran, Yacc, Lex, Qt and SWIG, and building TeX and LaTeX documents. Easily extensible through user-defined Builders for other languages or file types. Building from central repositories of source code and/or pre-built targets. Built-in support for fetching source files from SCCS, RCS, CVS, BitKeeper and Perforce. Built-in support for Microsoft Visual Studio .NET and past Visual Studio versions, including generation of .dsp, .dsw, .sln and .vcproj files. Reliable detection of build changes using MD5 signatures; optional, configurable support for traditional timestamps. Improved support for parallel builds--like make -j but keeps N jobs running simultaneously regardless of directory hierarchy. Integrated Autoconf-like support for finding #include files, libraries, functions and typedefs. Global view of all dependencies--no more multiple build passes or reordering targets to build everything. Ability to share built files in a cache to speed up multiple builds--like ccache but for any type of target file, not just C/C++ compilation. Designed from the ground up for cross-platform builds, and known to work on Linux, other POSIX systems (including AIX, BSD systems, HP/UX, IRIX and Solaris), Windows NT, Mac OS X, and OS/2. \u6700\u5927\u7279\u70b9\u5c31\u662f\u4f7f\u7528 Python \u8bed\u6cd5\u6765\u7f16\u5199\u7f16\u8bd1\u6784\u5efa\u811a\u672c\uff0c\u5e76\u4e14\u652f\u6301\u4f9d\u8d56\u81ea\u52a8\u63a8\u5bfc\uff0c\u652f\u6301\u7f16\u8bd1 C/C++/D/Java/Fortran\u7b49\u9879\u76ee\uff0c\u5e76\u4e14\u662f\u8de8\u5e73\u53f0\u7684(\u56e0\u4e3a python \u662f\u8de8\u5e73\u53f0\u7684\uff09\u3002 \u6240\u4ee5\u5982\u679c\u4f60\u5bf9 python \u719f\u6089\u7684\u8bdd\uff0c\u800c\u4e14\u4f60\u548c\u6211\u5bf9 C++ Makefile \u6709\u4e00\u6837\u7684\u70e6\u607c\uff0c\u90a3\u4e48\u8fd9\u5bf9\u4f60\u5c06\u662f\u4e00\u4e2a\u597d\u6d88\u606f\u3002 \u4f60\u5c06\u53ef\u4ee5\u7528 python \u6765\u7f16\u5199\u6784\u5efa\u811a\u672c\uff0c\u800c\u4e14\u4f1a\u5f88\u7b80\u5355\uff0c\u5bf9\u4e8e\u590d\u6742\u7684\u5927\u578b\u9879\u76ee\u4e5f\u80fd\u5feb\u901f\u6784\u5efa\u597d\u3002\uff08\u4e5f\u8bb8\u53ea\u8981 30 \u5206\u949f\uff09 \u5b89\u88c5 scons \u56e0\u4e3a scons \u662f\u57fa\u4e8e python \u6765\u6784\u5efa\u7684\uff0c\u6240\u4ee5\u6bcb\u5bb9\u7f6e\u7591\uff0c\u9996\u5148\u662f\u9700\u8981\u51c6\u5907\u597d python \u73af\u5883\uff0c\u7136\u540e\u4f7f\u7528\u4e0b\u8ff0\u547d\u4ee4\u5b89\u88c5 scons \u5de5\u5177\u3002 pip install scons scons \u4f7f\u7528\u8bed\u6cd5 scons \u6784\u5efa\u811a\u672c\u7531\u4e00\u4e2a SConstruct \u6587\u4ef6\u548c\u591a\u4e2a SConscript \u6587\u4ef6\u6784\u6210\u3002 SConstruct \u901a\u5e38\u4f4d\u4e8e\u9879\u76ee\u9876\u5c42\u76ee\u5f55\uff0c\u7136\u540e SConscript \u901a\u5e38\u4f4d\u4e8e\u5b50\u76ee\u5f55\uff08\u5b50\u6a21\u5757\uff09\u3002 \u90a3\u4e48\u6765\u770b\u4e00\u4e0b SConstruct \u811a\u672c\u957f\u5565\u6837? SConstruct #!/usr/bin/env python #-*- coding:utf-8 -*- import sys import os import platform import re env = Environment() abs_path = os.getcwd() print('workspace path:{0}'.format(abs_path)) sbuild_dir = 'sbuild' headers = ['.', 'third-party/include'] libs = ['./third-party/lib'] abs_headers = [] abs_libs = [] for item in headers: abs_item = os.path.join(abs_path, item) abs_headers.append(abs_item) for item in libs: abs_item = os.path.join(abs_path, item) abs_libs.append(abs_item) build_dir = os.path.join(abs_path, sbuild_dir) abs_libs.append(os.path.join(build_dir, 'lib')) CCFLAGS = '-ggdb -std=c++11' print('\\nheaders path:') print(abs_headers) print('\\n') print('libs path:') print(abs_libs) print('\\n') print( begin load SConscript ) env[ headers ] = abs_headers env[ libs ] = abs_libs env[ MUX_DIR ] = abs_path env['ccflags'] = CCFLAGS env['build_dir'] = build_dir Export('env') SConscript(['./mbase/SConscript']) SConscript(['./message_handle/SConscript']) SConscript(['./epoll/SConscript']) SConscript(['./transport/SConscript']) SConscript(['./demo/bench/SConscript']) SConscript(['./demo/echo/SConscript']) print( \\n All Done, Please Check {0} .format(env['build_dir'])) \u6765\u5206\u6790\u4e00\u4e0b\u8fd9\u4e2a\u6587\u4ef6\uff0c\u6e90\u6587\u4ef6\u53ef\u4ee5\u76f4\u63a5\u5728 \u6211\u7684github \u4e0b\u8f7d\u3002 SConstruct \u6587\u4ef6\u4e3b\u8981\u505a\u4e86\u4e24\u4ef6\u4e8b\uff1a env \u73af\u5883\u53d8\u91cf\u7684\u6784\u9020\uff0c\u4e3b\u8981\u662f\u5934\u6587\u4ef6\u8def\u5f84\uff0c\u5e93\u8def\u5f84\uff0c\u7f16\u8bd1\u53c2\u6570\uff0c\u81ea\u5b9a\u4e49\u7684\u4e00\u4e9b\u53d8\u91cf\u7b49 \u4f7f\u7528 SConscript \u51fd\u6570\u89e3\u6790\u6267\u884c\u5b50\u6a21\u5757\u7684 SConscript \u6587\u4ef6 \u9700\u8981\u6ce8\u610f\u7684\u662f SConstruct \u548c SConscript \u5171\u4eab\u53d8\u91cf\u4f7f\u7528\u7684\u5c31\u662f env \u8fd9\u4e2a\u53d8\u91cf\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u6709\u4e00\u53e5\uff1a Export('env') \u8fd9\u53e5\u5f88\u91cd\u8981\u3002 SConscript \u90a3\u4e48\u4f4d\u4e8e\u5b50\u6a21\u5757\u6216\u8005\u5b50\u76ee\u5f55\u7684 SConscript \u6587\u4ef6\u957f\u5565\u6837\u5462\uff1f #!/usr/bin/env python #-*- coding:utf-8 -*- import os import sys Import('env') project_dir = env['MUX_DIR'] epoll_lib = 'epoll' epoll_src_path = os.path.join(project_dir, 'epoll/src') epoll_sources = [] for item in os.listdir(epoll_src_path): if item.endswith('.cc') or item.endswith('.cpp') or item.endswith('.cxx'): abs_item = os.path.join(epoll_src_path, item) epoll_sources.append(abs_item) print('\\nbuild target:lib{0}.a'.format(epoll_lib)) print(epoll_sources) lib_dir = os.path.join(env['build_dir'], 'lib') link_libraries = ['mbase'] for lib_name in link_libraries: lib_name = {0}{1}{2} .format(env['LIBPREFIX'], lib_name, env['LIBSUFFIX']) abs_lib_name = os.path.join(lib_dir, lib_name) epoll_sources.append(abs_lib_name) env.StaticLibrary(target = os.path.join(lib_dir, epoll_lib), source = epoll_sources, CPPPATH = env['headers'], # include LIBPATH = env['libs'], # lib path LIBS = ['pthread'], # link lib CCFLAGS = env['ccflags'] ) \u6765\u5206\u6790\u4e00\u4e0b\u8fd9\u4e2a\u6587\u4ef6\uff0c\u6e90\u6587\u4ef6\u53ef\u4ee5\u76f4\u63a5\u5728 \u6211\u7684github \u4e0b\u8f7d\u3002 SConscript \u4e3b\u8981\u505a\u4e86\u4e24\u4ef6\u4e8b\uff1a \u6784\u9020\u4e00\u4e2a\u6e90\u6587\u4ef6\u5217\u8868\uff08\u7528\u6765\u6784\u5efa target \u6240\u9700\u8981\u4f7f\u7528\u7684\u6e90\u6587\u4ef6\uff09 \u6839\u636e\u9700\u8981\u6784\u5efa static_lib/dynamic_lib/binary \u5f53\u7136\uff0c\u8fd8\u6709\u4e00\u70b9\u5f88\u91cd\u8981\uff0c\u4e0a\u9762\u5176\u5b9e\u63d0\u5230\u4e86\uff0cSConscript \u548c SConstruct \u7528\u6765\u5171\u4eab\u53d8\u91cf\u4f7f\u7528\u7684\u662f env \u8fd9\u4e2a\u53d8\u91cf\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u770b\u5230\u4e00\u53e5\u5f88\u91cd\u8981\u7684\uff1a Import('env') \u6784\u9020\u6e90\u6587\u4ef6\u5217\u8868\uff0c\u5bf9\u4e8e Python \u6765\u8bf4\uff0c\u7b80\u76f4\u662f\u5c0f\u83dc\u4e00\u789f\uff0c\u592a\u7b80\u5355\u4e86\uff1b \u7136\u540e\u5982\u4f55\u751f\u6210\u76ee\u6807\u6587\u4ef6\u5462\uff1f 1 \u751f\u6210\u4e8c\u8fdb\u5236\u6587\u4ef6 env.Program(target = os.path.join(bin_dir, echo_server_bin), source = echo_server_sources, CPPPATH = env['headers'], LIBPATH = env['libs'], LIBS = ['transport','msghandler','epoll', 'mbase', 'pthread'], CCFLAGS = env['ccflags'] ) 2 \u751f\u6210\u9759\u6001\u5e93 env.StaticLibrary(target = os.path.join(lib_dir, epoll_lib), source = epoll_sources, CPPPATH = env['headers'], # include LIBPATH = env['libs'], # lib path LIBS = ['pthread'], # link lib CCFLAGS = env['ccflags'] ) 3 \u751f\u6210\u52a8\u6001\u5e93 env.SharedLibrary(target = os.path.join(lib_dir, epoll_lib), source = epoll_sources, CPPPATH = env['headers'], # include LIBPATH = env['libs'], # lib path LIBS = ['pthread'], # link lib CCFLAGS = env['ccflags'] ) \u4e0a\u9762 3 \u4e2a\u51fd\u6570\u7684\u53c2\u6570\u90fd\u662f\u7c7b\u4f3c\u7684\uff1a target: \u6307\u5b9a\u9700\u8981\u751f\u6210\u7684\u76ee\u6807\u6587\u4ef6\uff0c\u901a\u5e38\u6211\u81ea\u5df1\u4f1a\u5199\u4e00\u4e2a\u7edd\u5bf9\u8def\u5f84\uff1b\u5bf9\u4e8e lib \u6765\u8bf4\u53ea\u9700\u8981\u5199\u540d\u5b57\u5c31\u884c\uff0c\u524d\u7f00\u548c\u540e\u7f00\u4e0d\u9700\u8981\u5199\u3002(eg. target = '/root/scons_repo/sbuild/lib/test' \uff0c\u4f1a\u751f\u6210 /root/scons_repo/sbuild/lib/libtest.a) source: \u7f16\u8bd1\u76ee\u6807\u6587\u4ef6\u9700\u8981\u7684\u6e90\u6587\u4ef6\u5217\u8868 CPPPATH: \u901a\u5e38\u5c31\u662f\u9700\u8981 Include \u7684\u5934\u6587\u4ef6\u8def\u5f84 LIBPATH: \u901a\u5e38\u5c31\u662f\u9700\u8981\u94fe\u63a5\u7684\u5e93\u8def\u5f84 LIBS: \u9700\u8981\u94fe\u63a5\u7684\u5e93\u5217\u8868 CCFLAGS: \u7f16\u8bd1\u53c2\u6570 attention: \u4e0a\u9762\u6709\u4e00\u4e2a\u5751\u6211\u81ea\u5df1\u78b0\u5230\u7684\uff0c\u5f53\u6211\u6784\u5efa\u76ee\u6807\u751f\u6210\u4e00\u4e2a\u9759\u6001\u5e93\u7684\u65f6\u5019\uff0c\u9700\u8981\u94fe\u63a5\u5176\u4ed6\u7684\u9759\u6001\u5e93\uff0c\u5982\u679c\u4f7f\u7528 $LIBPATH \u548c $LIBS \u6307\u5b9a\u94fe\u63a5\u5e93\u7684\u8bdd\uff0cscons \u5e76\u6ca1\u6709\u94fe\u63a5\u8fd9\u4e9b\u5e93\u3002\u5c1d\u8bd5\u4e86\u5f88\u591a\u65b9\u6cd5\uff0c\u641c\u7d22\u4e86\u5f88\u591a\uff0c\u4e5f\u6ca1\u6709\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898 \u3002 \u6700\u540e\u662f\u8fd9\u6837\u89e3\u51b3\u7684\u3002\u628a\u9700\u8981\u94fe\u63a5\u7684\u9759\u6001\u5e93\u6dfb\u52a0\u5230 source \u53c2\u6570\u4e2d\uff0c\u548c\u5176\u4ed6 cc/cpp \u6e90\u6587\u4ef6\u4e00\u6837\u653e\u5728\u4e00\u8d77\uff0c\u5e76\u4e14\u8fd9\u4e9b\u5e93\u9700\u8981\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84 \u3002 \u901a\u5e38\u4e3a\u4e86\u8de8\u5e73\u53f0\u7684\u65b9\u4fbf\uff0c\u9700\u8981\u8003\u8651lib \u7684\u524d\u540e\u7f00\uff0c\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a link_libraries = ['test1', 'test2'] for lib_name in link_libraries: lib_name = {0}{1}{2} .format(env['LIBPREFIX'], lib_name, env['LIBSUFFIX']) abs_lib_name = os.path.join(lib_dir, lib_name) sources.append(abs_lib_name) scons \u547d\u4ee4 \u4e0a\u9762\u8be6\u7ec6\u8bb2\u89e3\u4e86\u5982\u4f55\u4f7f\u7528 python \u7f16\u5199\u6784\u5efa\u811a\u672c\uff0c\u90a3\u4e48\u5199\u597d\u4e4b\u540e\u600e\u4e48\u7528\u5462\uff1f \u5e38\u7528\u7684\u51e0\u4e2a\u547d\u4ee4\uff1a \u7f16\u8bd1 \uff1a scons \u5982\u679c\u9700\u8981\u5e76\u884c\u7f16\u8bd1\uff1a scons -j4 \u6e05\u7406 \uff1a scons -c \u7136\u540e\u5c31\u4f1a\u6309\u7167\u4f60\u811a\u672c\u91cc\u5199\u7684\u65b9\u5f0f\u53bb\u6784\u5efa\u76ee\u6807\u4e86\u3002 \u8fd9\u91cc\u8d34\u4e00\u4e0b \u6211\u7684\u9879\u76ee \u7f16\u8bd1\u7684\u8f93\u51fa\uff1a $ scons scons: Reading SConscript files ... workspace path:/mnt/centos-share/workspace/mux headers path: ['/mnt/centos-share/workspace/mux/.', '/mnt/centos-share/workspace/mux/third-party/include'] libs path: ['/mnt/centos-share/workspace/mux/./third-party/lib', '/mnt/centos-share/workspace/mux/sbuild/lib'] begin load SConscript build target:libmbase.a ['/mnt/centos-share/workspace/mux/mbase/src/packet.cc'] build target:libmsghandler.a ['/mnt/centos-share/workspace/mux/message_handle/src/message_handler.cc'] build target:libepoll.a ['/mnt/centos-share/workspace/mux/epoll/src/epoll_tcp_client.cc', '/mnt/centos-share/workspace/mux/epoll/src/epoll_tcp_server.cc'] build target:libtransport.a ['/mnt/centos-share/workspace/mux/transport/src/tcp_transport.cc'] build target:bench_server ['bench_server.cc'] build target:bench_client ['client.cc'] build target:echo_server ['echo_server.cc'] build target:echo_client ['client.cc'] All Done, Please Check /mnt/centos-share/workspace/mux/sbuild scons: done reading SConscript files. scons: Building targets ... g++ -o demo/bench/bench_server.o -c -ggdb -std=c++11 -I. -Ithird-party/include demo/bench/bench_server.cc g++ -o demo/bench/client.o -c -ggdb -std=c++11 -I. -Ithird-party/include demo/bench/client.cc g++ -o demo/echo/client.o -c -ggdb -std=c++11 -I. -Ithird-party/include demo/echo/client.cc g++ -o demo/echo/echo_server.o -c -ggdb -std=c++11 -I. -Ithird-party/include demo/echo/echo_server.cc g++ -o epoll/src/epoll_tcp_client.o -c -ggdb -std=c++11 -I. -Ithird-party/include epoll/src/epoll_tcp_client.cc g++ -o epoll/src/epoll_tcp_server.o -c -ggdb -std=c++11 -I. -Ithird-party/include epoll/src/epoll_tcp_server.cc g++ -o mbase/src/packet.o -c -ggdb -std=c++11 -I. -Ithird-party/include mbase/src/packet.cc g++ -o message_handle/src/message_handler.o -c -ggdb -std=c++11 -I. -Ithird-party/include message_handle/src/message_handler.cc g++ -o transport/src/tcp_transport.o -c -ggdb -std=c++11 -I. -Ithird-party/include transport/src/tcp_transport.cc ar rc sbuild/lib/libmbase.a mbase/src/packet.o ranlib sbuild/lib/libmbase.a ar rc sbuild/lib/libepoll.a epoll/src/epoll_tcp_client.o epoll/src/epoll_tcp_server.o sbuild/lib/libmbase.a ranlib sbuild/lib/libepoll.a ar rc sbuild/lib/libtransport.a transport/src/tcp_transport.o sbuild/lib/libepoll.a sbuild/lib/libmbase.a ranlib sbuild/lib/libtransport.a ar rc sbuild/lib/libmsghandler.a message_handle/src/message_handler.o sbuild/lib/libmbase.a ranlib sbuild/lib/libmsghandler.a g++ -o sbuild/bin/bench_client demo/bench/client.o -Lthird-party/lib -Lsbuild/lib -ltransport -lmsghandler -lepoll -lmbase -lpthread g++ -o sbuild/bin/bench_server demo/bench/bench_server.o -Lthird-party/lib -Lsbuild/lib -ltransport -lmsghandler -lepoll -lmbase -lpthread g++ -o sbuild/bin/echo_client demo/echo/client.o -Lthird-party/lib -Lsbuild/lib -ltransport -lmsghandler -lepoll -lmbase -lpthread g++ -o sbuild/bin/echo_server demo/echo/echo_server.o -Lthird-party/lib -Lsbuild/lib -ltransport -lmsghandler -lepoll -lmbase -lpthread scons: done building targets. $ scons -c scons: Reading SConscript files ... workspace path:/mnt/centos-share/workspace/mux headers path: ['/mnt/centos-share/workspace/mux/.', '/mnt/centos-share/workspace/mux/third-party/include'] libs path: ['/mnt/centos-share/workspace/mux/./third-party/lib', '/mnt/centos-share/workspace/mux/sbuild/lib'] begin load SConscript build target:libmbase.a ['/mnt/centos-share/workspace/mux/mbase/src/packet.cc'] build target:libmsghandler.a ['/mnt/centos-share/workspace/mux/message_handle/src/message_handler.cc'] build target:libepoll.a ['/mnt/centos-share/workspace/mux/epoll/src/epoll_tcp_client.cc', '/mnt/centos-share/workspace/mux/epoll/src/epoll_tcp_server.cc'] build target:libtransport.a ['/mnt/centos-share/workspace/mux/transport/src/tcp_transport.cc'] build target:bench_server ['bench_server.cc'] build target:bench_client ['client.cc'] build target:echo_server ['echo_server.cc'] build target:echo_client ['client.cc'] All Done, Please Check /mnt/centos-share/workspace/mux/sbuild scons: done reading SConscript files. scons: Cleaning targets ... Removed demo/bench/bench_server.o Removed demo/bench/client.o Removed demo/echo/client.o Removed demo/echo/echo_server.o Removed epoll/src/epoll_tcp_client.o Removed epoll/src/epoll_tcp_server.o Removed mbase/src/packet.o Removed message_handle/src/message_handler.o Removed transport/src/tcp_transport.o Removed sbuild/lib/libmbase.a Removed sbuild/lib/libepoll.a Removed sbuild/lib/libtransport.a Removed sbuild/lib/libmsghandler.a Removed sbuild/bin/bench_client Removed sbuild/bin/bench_server Removed sbuild/bin/echo_client Removed sbuild/bin/echo_server scons: done cleaning targets. \u5199\u5728\u6700\u540e scons \u4f7f\u7528 python \u811a\u672c\u6765\u6784\u5efa\u9879\u76ee\uff0c\u5982\u679c\u5bf9 python \u719f\u6089\u7684\u8bdd\uff0c\u90a3\u4e48\u7f16\u5199\u7f16\u8bd1\u6784\u5efa\u811a\u672c\u5c06\u4f1a\u5927\u5927\u63d0\u9ad8\u6548\u7387\uff0c\u518d\u4e5f\u4e0d\u7528\u5c40\u9650\u5728 Makefile \u7684\u86cb\u75bc\u8bed\u6cd5\u91cc\u9762\u4e86\u3002 \u5f53\u7136 scons \u7684\u7f3a\u70b9\u4e5f\u6709\uff0c\u636e\u8bf4\u5728\u5927\u578b\u9879\u76ee\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u4f1a\u5f88\u6162\u3002\u8fd9\u4e2a\u6211\u8fd8\u6ca1\u78b0\u5230\u8fc7\uff0c\u56e0\u4e3a\u6ca1\u6709\u7528\u5230\u5927\u578b\u9879\u76ee\u4e2d\u3002 \u4e0b\u4e00\u7bc7\uff0c\u5206\u4eab\u4e0b cmake \u6784\u5efa C++ \u9879\u76ee\u7684\u4e00\u4e9b\u8bed\u6cd5\u548c\u6b65\u9aa4\u3002 Blog: rebootcat.com email: 2020-04-11 \u4e8e\u676d\u5dde By \u53f2\u77db\u9769","title":"Scons"},{"location":"scons_build_cplusplus/#_1","text":"\u6211\u662f\u4e00\u4e2a linux c++ \u5f00\u53d1\u8005\uff0c\u4f46\u662f\u4e00\u76f4\u5bf9 Makefile \u7684\u8bed\u6cd5\u5f88\u662f\u5934\u75db\uff0c\u6bcf\u6b21\u90fd\u8bb0\u4e0d\u4f4f\uff0c\u6240\u4ee5\u6bcf\u6b21\u5199 Makefile \u90fd\u5f88\u75db\u82e6\uff0cMakefile \u91cc\u9700\u8981\u4f60\u81ea\u5df1\u7f16\u5199\u4f9d\u8d56\u548c\u63a8\u5bfc\u89c4\u5219\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u80fd\u4e0d\u80fd\u7b80\u5355\u70b9\u5462\uff1f \u5bf9\u4e8e\u7f16\u8bd1\u4e00\u4e2a C++ \u5de5\u7a0b\u6765\u8bf4\uff0c\u4e5f\u8bb8\u9700\u8981\u7684\u5c31\u662f\u5934\u6587\u4ef6\u8def\u5f84\u3001\u5e93\u8def\u5f84\u3001\u7f16\u8bd1\u53c2\u6570\uff0c\u5269\u4e0b\u7684\u4e1c\u897f\u57fa\u672c\u4e5f\u4e0d\u91cd\u8981\uff0c\u8fd9\u4e09\u6837\u8db3\u591f\u53bb\u7f16\u8bd1\u4e00\u4e2a\u5de5\u7a0b\u4e86\u3002\u6240\u4ee5\u6709\u6ca1\u6709\u4e00\u4e2a\u5de5\u5177\u80fd\u7b80\u5355\u70b9\u7684\u53bb\u5b9e\u73b0 C++ \u9879\u76ee\u7684\u6784\u5efa\u5462\uff1f \u7b54\u6848\u662f\u6709\u7684\uff0cScons \u5c31\u662f\u7b54\u6848\u3002","title":"\u524d\u8a00"},{"location":"scons_build_cplusplus/#scons","text":"","title":"Scons"},{"location":"scons_build_cplusplus/#scons_1","text":"\u8fd9\u91cc\u76f4\u63a5\u5f15\u7528\u5b98\u7f51\u7684\u89e3\u91ca\uff1a What is SCons? SCons is an Open Source software construction tool\u2014that is, a next-generation build tool. Think of SCons as an improved, cross-platform substitute for the classic Make utility with integrated functionality similar to autoconf/automake and compiler caches such as ccache. In short, SCons is an easier, more reliable and faster way to build software. What makes SCons better? Configuration files are Python scripts--use the power of a real programming language to solve build problems. Reliable, automatic dependency analysis built-in for C, C++ and Fortran--no more \"make depend\" or \"make clean\" to get all of the dependencies. Dependency analysis is easily extensible through user-defined dependency Scanners for other languages or file types. Built-in support for C, C++, D, Java, Fortran, Yacc, Lex, Qt and SWIG, and building TeX and LaTeX documents. Easily extensible through user-defined Builders for other languages or file types. Building from central repositories of source code and/or pre-built targets. Built-in support for fetching source files from SCCS, RCS, CVS, BitKeeper and Perforce. Built-in support for Microsoft Visual Studio .NET and past Visual Studio versions, including generation of .dsp, .dsw, .sln and .vcproj files. Reliable detection of build changes using MD5 signatures; optional, configurable support for traditional timestamps. Improved support for parallel builds--like make -j but keeps N jobs running simultaneously regardless of directory hierarchy. Integrated Autoconf-like support for finding #include files, libraries, functions and typedefs. Global view of all dependencies--no more multiple build passes or reordering targets to build everything. Ability to share built files in a cache to speed up multiple builds--like ccache but for any type of target file, not just C/C++ compilation. Designed from the ground up for cross-platform builds, and known to work on Linux, other POSIX systems (including AIX, BSD systems, HP/UX, IRIX and Solaris), Windows NT, Mac OS X, and OS/2. \u6700\u5927\u7279\u70b9\u5c31\u662f\u4f7f\u7528 Python \u8bed\u6cd5\u6765\u7f16\u5199\u7f16\u8bd1\u6784\u5efa\u811a\u672c\uff0c\u5e76\u4e14\u652f\u6301\u4f9d\u8d56\u81ea\u52a8\u63a8\u5bfc\uff0c\u652f\u6301\u7f16\u8bd1 C/C++/D/Java/Fortran\u7b49\u9879\u76ee\uff0c\u5e76\u4e14\u662f\u8de8\u5e73\u53f0\u7684(\u56e0\u4e3a python \u662f\u8de8\u5e73\u53f0\u7684\uff09\u3002 \u6240\u4ee5\u5982\u679c\u4f60\u5bf9 python \u719f\u6089\u7684\u8bdd\uff0c\u800c\u4e14\u4f60\u548c\u6211\u5bf9 C++ Makefile \u6709\u4e00\u6837\u7684\u70e6\u607c\uff0c\u90a3\u4e48\u8fd9\u5bf9\u4f60\u5c06\u662f\u4e00\u4e2a\u597d\u6d88\u606f\u3002 \u4f60\u5c06\u53ef\u4ee5\u7528 python \u6765\u7f16\u5199\u6784\u5efa\u811a\u672c\uff0c\u800c\u4e14\u4f1a\u5f88\u7b80\u5355\uff0c\u5bf9\u4e8e\u590d\u6742\u7684\u5927\u578b\u9879\u76ee\u4e5f\u80fd\u5feb\u901f\u6784\u5efa\u597d\u3002\uff08\u4e5f\u8bb8\u53ea\u8981 30 \u5206\u949f\uff09","title":"\u4ec0\u4e48\u662f scons"},{"location":"scons_build_cplusplus/#scons_2","text":"\u56e0\u4e3a scons \u662f\u57fa\u4e8e python \u6765\u6784\u5efa\u7684\uff0c\u6240\u4ee5\u6bcb\u5bb9\u7f6e\u7591\uff0c\u9996\u5148\u662f\u9700\u8981\u51c6\u5907\u597d python \u73af\u5883\uff0c\u7136\u540e\u4f7f\u7528\u4e0b\u8ff0\u547d\u4ee4\u5b89\u88c5 scons \u5de5\u5177\u3002 pip install scons","title":"\u5b89\u88c5 scons"},{"location":"scons_build_cplusplus/#scons_3","text":"scons \u6784\u5efa\u811a\u672c\u7531\u4e00\u4e2a SConstruct \u6587\u4ef6\u548c\u591a\u4e2a SConscript \u6587\u4ef6\u6784\u6210\u3002 SConstruct \u901a\u5e38\u4f4d\u4e8e\u9879\u76ee\u9876\u5c42\u76ee\u5f55\uff0c\u7136\u540e SConscript \u901a\u5e38\u4f4d\u4e8e\u5b50\u76ee\u5f55\uff08\u5b50\u6a21\u5757\uff09\u3002 \u90a3\u4e48\u6765\u770b\u4e00\u4e0b SConstruct \u811a\u672c\u957f\u5565\u6837?","title":"scons \u4f7f\u7528\u8bed\u6cd5"},{"location":"scons_build_cplusplus/#sconstruct","text":"#!/usr/bin/env python #-*- coding:utf-8 -*- import sys import os import platform import re env = Environment() abs_path = os.getcwd() print('workspace path:{0}'.format(abs_path)) sbuild_dir = 'sbuild' headers = ['.', 'third-party/include'] libs = ['./third-party/lib'] abs_headers = [] abs_libs = [] for item in headers: abs_item = os.path.join(abs_path, item) abs_headers.append(abs_item) for item in libs: abs_item = os.path.join(abs_path, item) abs_libs.append(abs_item) build_dir = os.path.join(abs_path, sbuild_dir) abs_libs.append(os.path.join(build_dir, 'lib')) CCFLAGS = '-ggdb -std=c++11' print('\\nheaders path:') print(abs_headers) print('\\n') print('libs path:') print(abs_libs) print('\\n') print( begin load SConscript ) env[ headers ] = abs_headers env[ libs ] = abs_libs env[ MUX_DIR ] = abs_path env['ccflags'] = CCFLAGS env['build_dir'] = build_dir Export('env') SConscript(['./mbase/SConscript']) SConscript(['./message_handle/SConscript']) SConscript(['./epoll/SConscript']) SConscript(['./transport/SConscript']) SConscript(['./demo/bench/SConscript']) SConscript(['./demo/echo/SConscript']) print( \\n All Done, Please Check {0} .format(env['build_dir'])) \u6765\u5206\u6790\u4e00\u4e0b\u8fd9\u4e2a\u6587\u4ef6\uff0c\u6e90\u6587\u4ef6\u53ef\u4ee5\u76f4\u63a5\u5728 \u6211\u7684github \u4e0b\u8f7d\u3002 SConstruct \u6587\u4ef6\u4e3b\u8981\u505a\u4e86\u4e24\u4ef6\u4e8b\uff1a env \u73af\u5883\u53d8\u91cf\u7684\u6784\u9020\uff0c\u4e3b\u8981\u662f\u5934\u6587\u4ef6\u8def\u5f84\uff0c\u5e93\u8def\u5f84\uff0c\u7f16\u8bd1\u53c2\u6570\uff0c\u81ea\u5b9a\u4e49\u7684\u4e00\u4e9b\u53d8\u91cf\u7b49 \u4f7f\u7528 SConscript \u51fd\u6570\u89e3\u6790\u6267\u884c\u5b50\u6a21\u5757\u7684 SConscript \u6587\u4ef6 \u9700\u8981\u6ce8\u610f\u7684\u662f SConstruct \u548c SConscript \u5171\u4eab\u53d8\u91cf\u4f7f\u7528\u7684\u5c31\u662f env \u8fd9\u4e2a\u53d8\u91cf\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u6709\u4e00\u53e5\uff1a Export('env') \u8fd9\u53e5\u5f88\u91cd\u8981\u3002","title":"SConstruct"},{"location":"scons_build_cplusplus/#sconscript","text":"\u90a3\u4e48\u4f4d\u4e8e\u5b50\u6a21\u5757\u6216\u8005\u5b50\u76ee\u5f55\u7684 SConscript \u6587\u4ef6\u957f\u5565\u6837\u5462\uff1f #!/usr/bin/env python #-*- coding:utf-8 -*- import os import sys Import('env') project_dir = env['MUX_DIR'] epoll_lib = 'epoll' epoll_src_path = os.path.join(project_dir, 'epoll/src') epoll_sources = [] for item in os.listdir(epoll_src_path): if item.endswith('.cc') or item.endswith('.cpp') or item.endswith('.cxx'): abs_item = os.path.join(epoll_src_path, item) epoll_sources.append(abs_item) print('\\nbuild target:lib{0}.a'.format(epoll_lib)) print(epoll_sources) lib_dir = os.path.join(env['build_dir'], 'lib') link_libraries = ['mbase'] for lib_name in link_libraries: lib_name = {0}{1}{2} .format(env['LIBPREFIX'], lib_name, env['LIBSUFFIX']) abs_lib_name = os.path.join(lib_dir, lib_name) epoll_sources.append(abs_lib_name) env.StaticLibrary(target = os.path.join(lib_dir, epoll_lib), source = epoll_sources, CPPPATH = env['headers'], # include LIBPATH = env['libs'], # lib path LIBS = ['pthread'], # link lib CCFLAGS = env['ccflags'] ) \u6765\u5206\u6790\u4e00\u4e0b\u8fd9\u4e2a\u6587\u4ef6\uff0c\u6e90\u6587\u4ef6\u53ef\u4ee5\u76f4\u63a5\u5728 \u6211\u7684github \u4e0b\u8f7d\u3002 SConscript \u4e3b\u8981\u505a\u4e86\u4e24\u4ef6\u4e8b\uff1a \u6784\u9020\u4e00\u4e2a\u6e90\u6587\u4ef6\u5217\u8868\uff08\u7528\u6765\u6784\u5efa target \u6240\u9700\u8981\u4f7f\u7528\u7684\u6e90\u6587\u4ef6\uff09 \u6839\u636e\u9700\u8981\u6784\u5efa static_lib/dynamic_lib/binary \u5f53\u7136\uff0c\u8fd8\u6709\u4e00\u70b9\u5f88\u91cd\u8981\uff0c\u4e0a\u9762\u5176\u5b9e\u63d0\u5230\u4e86\uff0cSConscript \u548c SConstruct \u7528\u6765\u5171\u4eab\u53d8\u91cf\u4f7f\u7528\u7684\u662f env \u8fd9\u4e2a\u53d8\u91cf\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u770b\u5230\u4e00\u53e5\u5f88\u91cd\u8981\u7684\uff1a Import('env') \u6784\u9020\u6e90\u6587\u4ef6\u5217\u8868\uff0c\u5bf9\u4e8e Python \u6765\u8bf4\uff0c\u7b80\u76f4\u662f\u5c0f\u83dc\u4e00\u789f\uff0c\u592a\u7b80\u5355\u4e86\uff1b \u7136\u540e\u5982\u4f55\u751f\u6210\u76ee\u6807\u6587\u4ef6\u5462\uff1f 1 \u751f\u6210\u4e8c\u8fdb\u5236\u6587\u4ef6 env.Program(target = os.path.join(bin_dir, echo_server_bin), source = echo_server_sources, CPPPATH = env['headers'], LIBPATH = env['libs'], LIBS = ['transport','msghandler','epoll', 'mbase', 'pthread'], CCFLAGS = env['ccflags'] ) 2 \u751f\u6210\u9759\u6001\u5e93 env.StaticLibrary(target = os.path.join(lib_dir, epoll_lib), source = epoll_sources, CPPPATH = env['headers'], # include LIBPATH = env['libs'], # lib path LIBS = ['pthread'], # link lib CCFLAGS = env['ccflags'] ) 3 \u751f\u6210\u52a8\u6001\u5e93 env.SharedLibrary(target = os.path.join(lib_dir, epoll_lib), source = epoll_sources, CPPPATH = env['headers'], # include LIBPATH = env['libs'], # lib path LIBS = ['pthread'], # link lib CCFLAGS = env['ccflags'] ) \u4e0a\u9762 3 \u4e2a\u51fd\u6570\u7684\u53c2\u6570\u90fd\u662f\u7c7b\u4f3c\u7684\uff1a target: \u6307\u5b9a\u9700\u8981\u751f\u6210\u7684\u76ee\u6807\u6587\u4ef6\uff0c\u901a\u5e38\u6211\u81ea\u5df1\u4f1a\u5199\u4e00\u4e2a\u7edd\u5bf9\u8def\u5f84\uff1b\u5bf9\u4e8e lib \u6765\u8bf4\u53ea\u9700\u8981\u5199\u540d\u5b57\u5c31\u884c\uff0c\u524d\u7f00\u548c\u540e\u7f00\u4e0d\u9700\u8981\u5199\u3002(eg. target = '/root/scons_repo/sbuild/lib/test' \uff0c\u4f1a\u751f\u6210 /root/scons_repo/sbuild/lib/libtest.a) source: \u7f16\u8bd1\u76ee\u6807\u6587\u4ef6\u9700\u8981\u7684\u6e90\u6587\u4ef6\u5217\u8868 CPPPATH: \u901a\u5e38\u5c31\u662f\u9700\u8981 Include \u7684\u5934\u6587\u4ef6\u8def\u5f84 LIBPATH: \u901a\u5e38\u5c31\u662f\u9700\u8981\u94fe\u63a5\u7684\u5e93\u8def\u5f84 LIBS: \u9700\u8981\u94fe\u63a5\u7684\u5e93\u5217\u8868 CCFLAGS: \u7f16\u8bd1\u53c2\u6570 attention: \u4e0a\u9762\u6709\u4e00\u4e2a\u5751\u6211\u81ea\u5df1\u78b0\u5230\u7684\uff0c\u5f53\u6211\u6784\u5efa\u76ee\u6807\u751f\u6210\u4e00\u4e2a\u9759\u6001\u5e93\u7684\u65f6\u5019\uff0c\u9700\u8981\u94fe\u63a5\u5176\u4ed6\u7684\u9759\u6001\u5e93\uff0c\u5982\u679c\u4f7f\u7528 $LIBPATH \u548c $LIBS \u6307\u5b9a\u94fe\u63a5\u5e93\u7684\u8bdd\uff0cscons \u5e76\u6ca1\u6709\u94fe\u63a5\u8fd9\u4e9b\u5e93\u3002\u5c1d\u8bd5\u4e86\u5f88\u591a\u65b9\u6cd5\uff0c\u641c\u7d22\u4e86\u5f88\u591a\uff0c\u4e5f\u6ca1\u6709\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898 \u3002 \u6700\u540e\u662f\u8fd9\u6837\u89e3\u51b3\u7684\u3002\u628a\u9700\u8981\u94fe\u63a5\u7684\u9759\u6001\u5e93\u6dfb\u52a0\u5230 source \u53c2\u6570\u4e2d\uff0c\u548c\u5176\u4ed6 cc/cpp \u6e90\u6587\u4ef6\u4e00\u6837\u653e\u5728\u4e00\u8d77\uff0c\u5e76\u4e14\u8fd9\u4e9b\u5e93\u9700\u8981\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84 \u3002 \u901a\u5e38\u4e3a\u4e86\u8de8\u5e73\u53f0\u7684\u65b9\u4fbf\uff0c\u9700\u8981\u8003\u8651lib \u7684\u524d\u540e\u7f00\uff0c\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a link_libraries = ['test1', 'test2'] for lib_name in link_libraries: lib_name = {0}{1}{2} .format(env['LIBPREFIX'], lib_name, env['LIBSUFFIX']) abs_lib_name = os.path.join(lib_dir, lib_name) sources.append(abs_lib_name)","title":"SConscript"},{"location":"scons_build_cplusplus/#scons_4","text":"\u4e0a\u9762\u8be6\u7ec6\u8bb2\u89e3\u4e86\u5982\u4f55\u4f7f\u7528 python \u7f16\u5199\u6784\u5efa\u811a\u672c\uff0c\u90a3\u4e48\u5199\u597d\u4e4b\u540e\u600e\u4e48\u7528\u5462\uff1f \u5e38\u7528\u7684\u51e0\u4e2a\u547d\u4ee4\uff1a \u7f16\u8bd1 \uff1a scons \u5982\u679c\u9700\u8981\u5e76\u884c\u7f16\u8bd1\uff1a scons -j4 \u6e05\u7406 \uff1a scons -c \u7136\u540e\u5c31\u4f1a\u6309\u7167\u4f60\u811a\u672c\u91cc\u5199\u7684\u65b9\u5f0f\u53bb\u6784\u5efa\u76ee\u6807\u4e86\u3002 \u8fd9\u91cc\u8d34\u4e00\u4e0b \u6211\u7684\u9879\u76ee \u7f16\u8bd1\u7684\u8f93\u51fa\uff1a $ scons scons: Reading SConscript files ... workspace path:/mnt/centos-share/workspace/mux headers path: ['/mnt/centos-share/workspace/mux/.', '/mnt/centos-share/workspace/mux/third-party/include'] libs path: ['/mnt/centos-share/workspace/mux/./third-party/lib', '/mnt/centos-share/workspace/mux/sbuild/lib'] begin load SConscript build target:libmbase.a ['/mnt/centos-share/workspace/mux/mbase/src/packet.cc'] build target:libmsghandler.a ['/mnt/centos-share/workspace/mux/message_handle/src/message_handler.cc'] build target:libepoll.a ['/mnt/centos-share/workspace/mux/epoll/src/epoll_tcp_client.cc', '/mnt/centos-share/workspace/mux/epoll/src/epoll_tcp_server.cc'] build target:libtransport.a ['/mnt/centos-share/workspace/mux/transport/src/tcp_transport.cc'] build target:bench_server ['bench_server.cc'] build target:bench_client ['client.cc'] build target:echo_server ['echo_server.cc'] build target:echo_client ['client.cc'] All Done, Please Check /mnt/centos-share/workspace/mux/sbuild scons: done reading SConscript files. scons: Building targets ... g++ -o demo/bench/bench_server.o -c -ggdb -std=c++11 -I. -Ithird-party/include demo/bench/bench_server.cc g++ -o demo/bench/client.o -c -ggdb -std=c++11 -I. -Ithird-party/include demo/bench/client.cc g++ -o demo/echo/client.o -c -ggdb -std=c++11 -I. -Ithird-party/include demo/echo/client.cc g++ -o demo/echo/echo_server.o -c -ggdb -std=c++11 -I. -Ithird-party/include demo/echo/echo_server.cc g++ -o epoll/src/epoll_tcp_client.o -c -ggdb -std=c++11 -I. -Ithird-party/include epoll/src/epoll_tcp_client.cc g++ -o epoll/src/epoll_tcp_server.o -c -ggdb -std=c++11 -I. -Ithird-party/include epoll/src/epoll_tcp_server.cc g++ -o mbase/src/packet.o -c -ggdb -std=c++11 -I. -Ithird-party/include mbase/src/packet.cc g++ -o message_handle/src/message_handler.o -c -ggdb -std=c++11 -I. -Ithird-party/include message_handle/src/message_handler.cc g++ -o transport/src/tcp_transport.o -c -ggdb -std=c++11 -I. -Ithird-party/include transport/src/tcp_transport.cc ar rc sbuild/lib/libmbase.a mbase/src/packet.o ranlib sbuild/lib/libmbase.a ar rc sbuild/lib/libepoll.a epoll/src/epoll_tcp_client.o epoll/src/epoll_tcp_server.o sbuild/lib/libmbase.a ranlib sbuild/lib/libepoll.a ar rc sbuild/lib/libtransport.a transport/src/tcp_transport.o sbuild/lib/libepoll.a sbuild/lib/libmbase.a ranlib sbuild/lib/libtransport.a ar rc sbuild/lib/libmsghandler.a message_handle/src/message_handler.o sbuild/lib/libmbase.a ranlib sbuild/lib/libmsghandler.a g++ -o sbuild/bin/bench_client demo/bench/client.o -Lthird-party/lib -Lsbuild/lib -ltransport -lmsghandler -lepoll -lmbase -lpthread g++ -o sbuild/bin/bench_server demo/bench/bench_server.o -Lthird-party/lib -Lsbuild/lib -ltransport -lmsghandler -lepoll -lmbase -lpthread g++ -o sbuild/bin/echo_client demo/echo/client.o -Lthird-party/lib -Lsbuild/lib -ltransport -lmsghandler -lepoll -lmbase -lpthread g++ -o sbuild/bin/echo_server demo/echo/echo_server.o -Lthird-party/lib -Lsbuild/lib -ltransport -lmsghandler -lepoll -lmbase -lpthread scons: done building targets. $ scons -c scons: Reading SConscript files ... workspace path:/mnt/centos-share/workspace/mux headers path: ['/mnt/centos-share/workspace/mux/.', '/mnt/centos-share/workspace/mux/third-party/include'] libs path: ['/mnt/centos-share/workspace/mux/./third-party/lib', '/mnt/centos-share/workspace/mux/sbuild/lib'] begin load SConscript build target:libmbase.a ['/mnt/centos-share/workspace/mux/mbase/src/packet.cc'] build target:libmsghandler.a ['/mnt/centos-share/workspace/mux/message_handle/src/message_handler.cc'] build target:libepoll.a ['/mnt/centos-share/workspace/mux/epoll/src/epoll_tcp_client.cc', '/mnt/centos-share/workspace/mux/epoll/src/epoll_tcp_server.cc'] build target:libtransport.a ['/mnt/centos-share/workspace/mux/transport/src/tcp_transport.cc'] build target:bench_server ['bench_server.cc'] build target:bench_client ['client.cc'] build target:echo_server ['echo_server.cc'] build target:echo_client ['client.cc'] All Done, Please Check /mnt/centos-share/workspace/mux/sbuild scons: done reading SConscript files. scons: Cleaning targets ... Removed demo/bench/bench_server.o Removed demo/bench/client.o Removed demo/echo/client.o Removed demo/echo/echo_server.o Removed epoll/src/epoll_tcp_client.o Removed epoll/src/epoll_tcp_server.o Removed mbase/src/packet.o Removed message_handle/src/message_handler.o Removed transport/src/tcp_transport.o Removed sbuild/lib/libmbase.a Removed sbuild/lib/libepoll.a Removed sbuild/lib/libtransport.a Removed sbuild/lib/libmsghandler.a Removed sbuild/bin/bench_client Removed sbuild/bin/bench_server Removed sbuild/bin/echo_client Removed sbuild/bin/echo_server scons: done cleaning targets.","title":"scons \u547d\u4ee4"},{"location":"scons_build_cplusplus/#_2","text":"scons \u4f7f\u7528 python \u811a\u672c\u6765\u6784\u5efa\u9879\u76ee\uff0c\u5982\u679c\u5bf9 python \u719f\u6089\u7684\u8bdd\uff0c\u90a3\u4e48\u7f16\u5199\u7f16\u8bd1\u6784\u5efa\u811a\u672c\u5c06\u4f1a\u5927\u5927\u63d0\u9ad8\u6548\u7387\uff0c\u518d\u4e5f\u4e0d\u7528\u5c40\u9650\u5728 Makefile \u7684\u86cb\u75bc\u8bed\u6cd5\u91cc\u9762\u4e86\u3002 \u5f53\u7136 scons \u7684\u7f3a\u70b9\u4e5f\u6709\uff0c\u636e\u8bf4\u5728\u5927\u578b\u9879\u76ee\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u4f1a\u5f88\u6162\u3002\u8fd9\u4e2a\u6211\u8fd8\u6ca1\u78b0\u5230\u8fc7\uff0c\u56e0\u4e3a\u6ca1\u6709\u7528\u5230\u5927\u578b\u9879\u76ee\u4e2d\u3002 \u4e0b\u4e00\u7bc7\uff0c\u5206\u4eab\u4e0b cmake \u6784\u5efa C++ \u9879\u76ee\u7684\u4e00\u4e9b\u8bed\u6cd5\u548c\u6b65\u9aa4\u3002 Blog: rebootcat.com email: 2020-04-11 \u4e8e\u676d\u5dde By \u53f2\u77db\u9769","title":"\u5199\u5728\u6700\u540e"}]}